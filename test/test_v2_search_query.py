# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_search_query import V2SearchQuery

class TestV2SearchQuery(unittest.TestCase):
    """V2SearchQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2SearchQuery:
        """Test V2SearchQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2SearchQuery`
        """
        model = V2SearchQuery()
        if include_optional:
            return V2SearchQuery(
                ids_query = zitadel_client.models.v2_ids_query.v2IDsQuery(
                    ids = [
                        ''
                        ], ),
                user_id_query = zitadel_client.models.v2_user_id_query.v2UserIDQuery(
                    id = '', ),
                creation_date_query = zitadel_client.models.v2_creation_date_query.v2CreationDateQuery(
                    creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    method = 'TIMESTAMP_QUERY_METHOD_EQUALS', ),
                creator_query = zitadel_client.models.v2_creator_query.v2CreatorQuery(
                    id = '69629023906488334', ),
                user_agent_query = zitadel_client.models.v2_user_agent_query.v2UserAgentQuery(
                    fingerprint_id = '69629023906488334', )
            )
        else:
            return V2SearchQuery(
        )
        """

    def testV2SearchQuery(self):
        """Test V2SearchQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
