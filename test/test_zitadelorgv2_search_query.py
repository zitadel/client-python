# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.zitadelorgv2_search_query import Zitadelorgv2SearchQuery

class TestZitadelorgv2SearchQuery(unittest.TestCase):
    """Zitadelorgv2SearchQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Zitadelorgv2SearchQuery:
        """Test Zitadelorgv2SearchQuery
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Zitadelorgv2SearchQuery`
        """
        model = Zitadelorgv2SearchQuery()
        if include_optional:
            return Zitadelorgv2SearchQuery(
                name_query = zitadel_client.models.v2_organization_name_query.v2OrganizationNameQuery(
                    name = 'gigi-giraffe', 
                    method = 'TEXT_QUERY_METHOD_EQUALS', ),
                domain_query = zitadel_client.models.v2_organization_domain_query.v2OrganizationDomainQuery(
                    domain = 'citadel.cloud', 
                    method = 'TEXT_QUERY_METHOD_EQUALS', ),
                state_query = zitadel_client.models.v2_organization_state_query.v2OrganizationStateQuery(
                    state = 'ORGANIZATION_STATE_UNSPECIFIED', ),
                id_query = zitadel_client.models.v2_organization_id_query.v2OrganizationIDQuery(
                    id = '69629023906488334', ),
                default_query = zitadel_client.models.v2_default_organization_query.v2DefaultOrganizationQuery()
            )
        else:
            return Zitadelorgv2SearchQuery(
        )
        """

    def testZitadelorgv2SearchQuery(self):
        """Test Zitadelorgv2SearchQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
