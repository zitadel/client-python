# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_get_legal_and_support_settings_response import V2GetLegalAndSupportSettingsResponse

class TestV2GetLegalAndSupportSettingsResponse(unittest.TestCase):
    """V2GetLegalAndSupportSettingsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2GetLegalAndSupportSettingsResponse:
        """Test V2GetLegalAndSupportSettingsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2GetLegalAndSupportSettingsResponse`
        """
        model = V2GetLegalAndSupportSettingsResponse()
        if include_optional:
            return V2GetLegalAndSupportSettingsResponse(
                details = zitadel_client.models.v2_details.v2Details(
                    sequence = '2', 
                    change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    resource_owner = '69629023906488334', ),
                settings = zitadel_client.models.v2_legal_and_support_settings.v2LegalAndSupportSettings(
                    tos_link = 'https://zitadel.com/docs/legal/terms-of-service', 
                    privacy_policy_link = 'https://zitadel.com/docs/legal/privacy-policy', 
                    help_link = 'https://zitadel.com/docs/manuals/introduction', 
                    support_email = 'support-email@test.com', 
                    resource_owner_type = 'RESOURCE_OWNER_TYPE_UNSPECIFIED', 
                    docs_link = 'https://zitadel.com/docs', 
                    custom_link = 'https://external.link', 
                    custom_link_text = 'External', )
            )
        else:
            return V2GetLegalAndSupportSettingsResponse(
        )
        """

    def testV2GetLegalAndSupportSettingsResponse(self):
        """Test V2GetLegalAndSupportSettingsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
