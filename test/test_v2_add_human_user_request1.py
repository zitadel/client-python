# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_add_human_user_request1 import V2AddHumanUserRequest1

class TestV2AddHumanUserRequest1(unittest.TestCase):
    """V2AddHumanUserRequest1 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AddHumanUserRequest1:
        """Test V2AddHumanUserRequest1
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AddHumanUserRequest1`
        """
        model = V2AddHumanUserRequest1()
        if include_optional:
            return V2AddHumanUserRequest1(
                user_id = 'd654e6ba-70a3-48ef-a95d-37c8d8a7901a',
                username = 'minnie-mouse',
                organization = zitadel_client.models.v2_organization.v2Organization(
                    org_id = '', 
                    org_domain = '', ),
                profile = zitadel_client.models.v2_set_human_profile_1.v2SetHumanProfile_1(
                    given_name = 'Minnie', 
                    family_name = 'Mouse', 
                    nick_name = 'Mini', 
                    display_name = 'Minnie Mouse', 
                    preferred_language = 'en', 
                    gender = 'GENDER_UNSPECIFIED', ),
                email = zitadel_client.models.v2_set_human_email_1.v2SetHumanEmail_1(
                    email = 'mini@mouse.com', 
                    send_code = zitadel_client.models.v2_send_email_verification_code.v2SendEmailVerificationCode(
                        url_template = 'https://example.com/email/verify?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}', ), 
                    return_code = zitadel_client.models.v2_return_email_verification_code.v2ReturnEmailVerificationCode(), 
                    is_verified = True, ),
                phone = zitadel_client.models.v2_set_human_phone_1.v2SetHumanPhone_1(
                    phone = '+41791234567', 
                    send_code = zitadel_client.models.v2_send_phone_verification_code.v2SendPhoneVerificationCode(), 
                    return_code = zitadel_client.models.v2_return_phone_verification_code.v2ReturnPhoneVerificationCode(), 
                    is_verified = True, ),
                metadata = [
                    zitadel_client.models.v2_set_metadata_entry_1.v2SetMetadataEntry_1(
                        key = 'my-key', 
                        value = '[B@34448e6c', )
                    ],
                password = zitadel_client.models.v2_password.v2Password(
                    password = 'Secr3tP4ssw0rd!', 
                    change_required = True, ),
                hashed_password = zitadel_client.models.v2_hashed_password.v2HashedPassword(
                    hash = '$2a$12$lJ08fqVr8bFJilRVnDT9QeULI7YW.nT3iwUv6dyg0aCrfm3UY8XR2', 
                    change_required = True, ),
                idp_links = [
                    zitadel_client.models.v2_idp_link.v2IDPLink(
                        idp_id = 'd654e6ba-70a3-48ef-a95d-37c8d8a7901a', 
                        user_id = '6516849804890468048461403518', 
                        user_name = 'user@external.com', )
                    ],
                totp_secret = 'TJOPWSDYILLHXFV4MLKNNJOWFG7VSDCK'
            )
        else:
            return V2AddHumanUserRequest1(
                profile = zitadel_client.models.v2_set_human_profile_1.v2SetHumanProfile_1(
                    given_name = 'Minnie', 
                    family_name = 'Mouse', 
                    nick_name = 'Mini', 
                    display_name = 'Minnie Mouse', 
                    preferred_language = 'en', 
                    gender = 'GENDER_UNSPECIFIED', ),
                email = zitadel_client.models.v2_set_human_email_1.v2SetHumanEmail_1(
                    email = 'mini@mouse.com', 
                    send_code = zitadel_client.models.v2_send_email_verification_code.v2SendEmailVerificationCode(
                        url_template = 'https://example.com/email/verify?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}', ), 
                    return_code = zitadel_client.models.v2_return_email_verification_code.v2ReturnEmailVerificationCode(), 
                    is_verified = True, ),
        )
        """

    def testV2AddHumanUserRequest1(self):
        """Test V2AddHumanUserRequest1"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
