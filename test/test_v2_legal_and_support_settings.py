# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_legal_and_support_settings import V2LegalAndSupportSettings

class TestV2LegalAndSupportSettings(unittest.TestCase):
    """V2LegalAndSupportSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2LegalAndSupportSettings:
        """Test V2LegalAndSupportSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2LegalAndSupportSettings`
        """
        model = V2LegalAndSupportSettings()
        if include_optional:
            return V2LegalAndSupportSettings(
                tos_link = 'https://zitadel.com/docs/legal/terms-of-service',
                privacy_policy_link = 'https://zitadel.com/docs/legal/privacy-policy',
                help_link = 'https://zitadel.com/docs/manuals/introduction',
                support_email = 'support-email@test.com',
                resource_owner_type = 'RESOURCE_OWNER_TYPE_UNSPECIFIED',
                docs_link = 'https://zitadel.com/docs',
                custom_link = 'https://external.link',
                custom_link_text = 'External'
            )
        else:
            return V2LegalAndSupportSettings(
        )
        """

    def testV2LegalAndSupportSettings(self):
        """Test V2LegalAndSupportSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
