# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_set_session_response import V2SetSessionResponse

class TestV2SetSessionResponse(unittest.TestCase):
    """V2SetSessionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2SetSessionResponse:
        """Test V2SetSessionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2SetSessionResponse`
        """
        model = V2SetSessionResponse()
        if include_optional:
            return V2SetSessionResponse(
                details = zitadel_client.models.v2_details.v2Details(
                    sequence = '2', 
                    change_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    resource_owner = '69629023906488334', ),
                session_token = '',
                challenges = zitadel_client.models.v2_challenges.v2Challenges(
                    web_auth_n = zitadel_client.models.v2_challenges_web_auth_n.v2ChallengesWebAuthN(
                        public_key_credential_request_options = {"publicKey":{"allowCredentials":[{"id":"ATmqBg-99qyOZk2zloPdJQyS2R7IkFT7v9Hoos_B_nM","type":"public-key"}],"challenge":"GAOHYz2jE69kJMYo6Laij8yWw9-dKKgbViNhfuy0StA","rpId":"localhost","timeout":300000,"userVerification":"required"}}, ), 
                    otp_sms = '', 
                    otp_email = '', )
            )
        else:
            return V2SetSessionResponse(
        )
        """

    def testV2SetSessionResponse(self):
        """Test V2SetSessionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
