# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_add_organization_request import V2AddOrganizationRequest

class TestV2AddOrganizationRequest(unittest.TestCase):
    """V2AddOrganizationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AddOrganizationRequest:
        """Test V2AddOrganizationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AddOrganizationRequest`
        """
        model = V2AddOrganizationRequest()
        if include_optional:
            return V2AddOrganizationRequest(
                name = 'ZITADEL',
                admins = [
                    zitadel_client.models.add_organization_request_admin.AddOrganizationRequestAdmin(
                        user_id = '', 
                        human = zitadel_client.models.v2_add_human_user_request.v2AddHumanUserRequest(
                            user_id = 'd654e6ba-70a3-48ef-a95d-37c8d8a7901a', 
                            username = 'minnie-mouse', 
                            organization = zitadel_client.models.zitadelobjectv2_organization.zitadelobjectv2Organization(
                                org_id = '', 
                                org_domain = '', ), 
                            profile = zitadel_client.models.v2_set_human_profile.v2SetHumanProfile(
                                given_name = 'Minnie', 
                                family_name = 'Mouse', 
                                nick_name = 'Mini', 
                                display_name = 'Minnie Mouse', 
                                preferred_language = 'en', 
                                gender = 'GENDER_UNSPECIFIED', ), 
                            email = zitadel_client.models.v2_set_human_email.v2SetHumanEmail(
                                email = 'mini@mouse.com', 
                                send_code = zitadel_client.models.v2_send_email_verification_code.v2SendEmailVerificationCode(
                                    url_template = 'https://example.com/email/verify?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}', ), 
                                return_code = zitadel_client.models.v2_return_email_verification_code.v2ReturnEmailVerificationCode(), 
                                is_verified = True, ), 
                            phone = zitadel_client.models.v2_set_human_phone.v2SetHumanPhone(
                                is_verified = True, ), 
                            metadata = [
                                zitadel_client.models.v2_set_metadata_entry.v2SetMetadataEntry(
                                    key = 'my-key', 
                                    value = '[B@4a67318f', )
                                ], 
                            password = zitadel_client.models.v2_password.v2Password(
                                password = 'Secr3tP4ssw0rd!', 
                                change_required = True, ), 
                            hashed_password = zitadel_client.models.v2_hashed_password.v2HashedPassword(
                                hash = '$2a$12$lJ08fqVr8bFJilRVnDT9QeULI7YW.nT3iwUv6dyg0aCrfm3UY8XR2', 
                                change_required = True, ), 
                            idp_links = [
                                zitadel_client.models.v2_idp_link.v2IDPLink(
                                    idp_id = 'd654e6ba-70a3-48ef-a95d-37c8d8a7901a', 
                                    user_id = '6516849804890468048461403518', 
                                    user_name = 'user@external.com', )
                                ], 
                            totp_secret = 'TJOPWSDYILLHXFV4MLKNNJOWFG7VSDCK', ), 
                        roles = [
                            ''
                            ], )
                    ]
            )
        else:
            return V2AddOrganizationRequest(
                name = 'ZITADEL',
        )
        """

    def testV2AddOrganizationRequest(self):
        """Test V2AddOrganizationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
