# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_auth_factor import V2AuthFactor

class TestV2AuthFactor(unittest.TestCase):
    """V2AuthFactor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AuthFactor:
        """Test V2AuthFactor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AuthFactor`
        """
        model = V2AuthFactor()
        if include_optional:
            return V2AuthFactor(
                state = 'AUTH_FACTOR_STATE_UNSPECIFIED',
                otp = zitadel_client.models.v2_auth_factor_otp.v2AuthFactorOTP(),
                u2f = zitadel_client.models.v2_auth_factor_u2_f.v2AuthFactorU2F(
                    id = '69629023906488334', 
                    name = 'fido key', ),
                otp_sms = zitadel_client.models.v2_auth_factor_otpsms.v2AuthFactorOTPSMS(),
                otp_email = zitadel_client.models.v2_auth_factor_otp_email.v2AuthFactorOTPEmail()
            )
        else:
            return V2AuthFactor(
        )
        """

    def testV2AuthFactor(self):
        """Test V2AuthFactor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
