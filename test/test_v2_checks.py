# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_checks import V2Checks

class TestV2Checks(unittest.TestCase):
    """V2Checks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2Checks:
        """Test V2Checks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2Checks`
        """
        model = V2Checks()
        if include_optional:
            return V2Checks(
                user = zitadel_client.models.v2_check_user.v2CheckUser(
                    user_id = 'd654e6ba-70a3-48ef-a95d-37c8d8a7901a', 
                    login_name = 'mini@mouse.com', ),
                password = zitadel_client.models.v2_check_password.v2CheckPassword(),
                web_auth_n = zitadel_client.models.v2_check_web_auth_n.v2CheckWebAuthN(
                    credential_assertion_data = zitadel_client.models.credential_assertion_data.credentialAssertionData(), ),
                idp_intent = zitadel_client.models.v2_check_idp_intent.v2CheckIDPIntent(
                    idp_intent_id = 'd654e6ba-70a3-48ef-a95d-37c8d8a7901a', 
                    idp_intent_token = 'SJKL3ioIDpo342ioqw98fjp3sdf32wahb=', ),
                totp = zitadel_client.models.v2_check_totp.v2CheckTOTP(
                    code = '323764', ),
                otp_sms = zitadel_client.models.v2_check_otp.v2CheckOTP(
                    code = '3237642', ),
                otp_email = zitadel_client.models.v2_check_otp.v2CheckOTP(
                    code = '3237642', )
            )
        else:
            return V2Checks(
        )
        """

    def testV2Checks(self):
        """Test V2Checks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
