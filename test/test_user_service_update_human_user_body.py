# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.user_service_update_human_user_body import UserServiceUpdateHumanUserBody

class TestUserServiceUpdateHumanUserBody(unittest.TestCase):
    """UserServiceUpdateHumanUserBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserServiceUpdateHumanUserBody:
        """Test UserServiceUpdateHumanUserBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserServiceUpdateHumanUserBody`
        """
        model = UserServiceUpdateHumanUserBody()
        if include_optional:
            return UserServiceUpdateHumanUserBody(
                username = 'minnie-mouse',
                profile = zitadel_client.models.v2_set_human_profile_1.v2SetHumanProfile_1(
                    given_name = 'Minnie', 
                    family_name = 'Mouse', 
                    nick_name = 'Mini', 
                    display_name = 'Minnie Mouse', 
                    preferred_language = 'en', 
                    gender = 'GENDER_UNSPECIFIED', ),
                email = zitadel_client.models.v2_set_human_email_1.v2SetHumanEmail_1(
                    email = 'mini@mouse.com', 
                    send_code = zitadel_client.models.v2_send_email_verification_code.v2SendEmailVerificationCode(
                        url_template = 'https://example.com/email/verify?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}', ), 
                    return_code = zitadel_client.models.v2_return_email_verification_code.v2ReturnEmailVerificationCode(), 
                    is_verified = True, ),
                phone = zitadel_client.models.v2_set_human_phone_1.v2SetHumanPhone_1(
                    phone = '+41791234567', 
                    send_code = zitadel_client.models.v2_send_phone_verification_code.v2SendPhoneVerificationCode(), 
                    return_code = zitadel_client.models.v2_return_phone_verification_code.v2ReturnPhoneVerificationCode(), 
                    is_verified = True, ),
                password = zitadel_client.models.userv2_set_password.userv2SetPassword(
                    password = zitadel_client.models.v2_password.v2Password(
                        password = 'Secr3tP4ssw0rd!', 
                        change_required = True, ), 
                    hashed_password = zitadel_client.models.v2_hashed_password.v2HashedPassword(
                        hash = '$2a$12$lJ08fqVr8bFJilRVnDT9QeULI7YW.nT3iwUv6dyg0aCrfm3UY8XR2', 
                        change_required = True, ), 
                    current_password = 'Secr3tP4ssw0rd!', 
                    verification_code = 'SKJd342k', )
            )
        else:
            return UserServiceUpdateHumanUserBody(
        )
        """

    def testUserServiceUpdateHumanUserBody(self):
        """Test UserServiceUpdateHumanUserBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
