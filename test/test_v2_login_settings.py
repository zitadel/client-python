# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from zitadel_client.models.v2_login_settings import V2LoginSettings

class TestV2LoginSettings(unittest.TestCase):
    """V2LoginSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2LoginSettings:
        """Test V2LoginSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2LoginSettings`
        """
        model = V2LoginSettings()
        if include_optional:
            return V2LoginSettings(
                allow_username_password = True,
                allow_register = True,
                allow_external_idp = True,
                force_mfa = True,
                passkeys_type = 'PASSKEYS_TYPE_NOT_ALLOWED',
                hide_password_reset = True,
                ignore_unknown_usernames = True,
                default_redirect_uri = 'https://acme.com/ui/console',
                password_check_lifetime = '864000s',
                external_login_check_lifetime = '864000s',
                mfa_init_skip_lifetime = '2592000s',
                second_factor_check_lifetime = '64800s',
                multi_factor_check_lifetime = '43200s',
                second_factors = [
                    'SECOND_FACTOR_TYPE_UNSPECIFIED'
                    ],
                multi_factors = [
                    'MULTI_FACTOR_TYPE_UNSPECIFIED'
                    ],
                allow_domain_discovery = True,
                disable_login_with_email = True,
                disable_login_with_phone = True,
                resource_owner_type = 'RESOURCE_OWNER_TYPE_UNSPECIFIED',
                force_mfa_local_only = True
            )
        else:
            return V2LoginSettings(
        )
        """

    def testV2LoginSettings(self):
        """Test V2LoginSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
