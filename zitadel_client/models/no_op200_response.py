# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.identity_provider_service_apple_config import IdentityProviderServiceAppleConfig
from zitadel_client.models.identity_provider_service_azure_ad_config import IdentityProviderServiceAzureADConfig
from zitadel_client.models.identity_provider_service_azure_ad_tenant_type import IdentityProviderServiceAzureADTenantType
from zitadel_client.models.identity_provider_service_generic_oidc_config import IdentityProviderServiceGenericOIDCConfig
from zitadel_client.models.identity_provider_service_git_hub_config import IdentityProviderServiceGitHubConfig
from zitadel_client.models.identity_provider_service_git_hub_enterprise_server_config import IdentityProviderServiceGitHubEnterpriseServerConfig
from zitadel_client.models.identity_provider_service_git_lab_config import IdentityProviderServiceGitLabConfig
from zitadel_client.models.identity_provider_service_git_lab_self_hosted_config import IdentityProviderServiceGitLabSelfHostedConfig
from zitadel_client.models.identity_provider_service_google_config import IdentityProviderServiceGoogleConfig
from zitadel_client.models.identity_provider_service_jwt_config import IdentityProviderServiceJWTConfig
from zitadel_client.models.identity_provider_service_ldap_config import IdentityProviderServiceLDAPConfig
from zitadel_client.models.identity_provider_service_o_auth_config import IdentityProviderServiceOAuthConfig
from zitadel_client.models.identity_provider_service_saml_config import IdentityProviderServiceSAMLConfig
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response(BaseModel):
    """
    NoOp200Response
    """ # noqa: E501
    var_8441420f_0f12_4dcb_850c_018df092eac6: Optional[IdentityProviderServiceAppleConfig] = Field(default=None, alias="8441420f-0f12-4dcb-850c-018df092eac6")
    c649d0dc_722e_4d8f_a9d5_b66697477bdf: Optional[IdentityProviderServiceAzureADConfig] = Field(default=None, alias="c649d0dc-722e-4d8f-a9d5-b66697477bdf")
    a8fc9e9c_1722_45ea_b1db_d8d488cb7a73: Optional[IdentityProviderServiceAzureADTenantType] = Field(default=None, alias="a8fc9e9c-1722-45ea-b1db-d8d488cb7a73")
    var_4a6eecea_4e11_4448_99a7_e62eacf0f00e: Optional[IdentityProviderServiceGenericOIDCConfig] = Field(default=None, alias="4a6eecea-4e11-4448-99a7-e62eacf0f00e")
    d003c137_9066_4dab_b87a_f427f3569ecb: Optional[IdentityProviderServiceGitHubConfig] = Field(default=None, alias="d003c137-9066-4dab-b87a-f427f3569ecb")
    var_0b5bc982_57a1_495e_a25d_7774c0ada464: Optional[IdentityProviderServiceGitHubEnterpriseServerConfig] = Field(default=None, alias="0b5bc982-57a1-495e-a25d-7774c0ada464")
    aa233ae4_8316_4f3d_90c4_2355713c7829: Optional[IdentityProviderServiceGitLabConfig] = Field(default=None, alias="aa233ae4-8316-4f3d-90c4-2355713c7829")
    var_6b121e92_2e75_4bb6_ae63_79465b115116: Optional[IdentityProviderServiceGitLabSelfHostedConfig] = Field(default=None, alias="6b121e92-2e75-4bb6-ae63-79465b115116")
    d46c89de_23af_4ee4_9f8c_1af4e3f807ad: Optional[IdentityProviderServiceGoogleConfig] = Field(default=None, alias="d46c89de-23af-4ee4-9f8c-1af4e3f807ad")
    e67c5d6b_04fe_448a_87f1_51211266e6a2: Optional[IdentityProviderServiceJWTConfig] = Field(default=None, alias="e67c5d6b-04fe-448a-87f1-51211266e6a2")
    fbb8d0c3_45bc_4c00_a78e_0b09da1dd662: Optional[IdentityProviderServiceLDAPConfig] = Field(default=None, alias="fbb8d0c3-45bc-4c00-a78e-0b09da1dd662")
    dc49af89_1cfc_4f1c_b6ab_5b4a49223de2: Optional[IdentityProviderServiceOAuthConfig] = Field(default=None, alias="dc49af89-1cfc-4f1c-b6ab-5b4a49223de2")
    c14fad73_15be_46c8_9763_7f7e5c31379c: Optional[IdentityProviderServiceSAMLConfig] = Field(default=None, alias="c14fad73-15be-46c8-9763-7f7e5c31379c")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_8441420f_0f12_4dcb_850c_018df092eac6
        if self.var_8441420f_0f12_4dcb_850c_018df092eac6:
            _dict['8441420f-0f12-4dcb-850c-018df092eac6'] = self.var_8441420f_0f12_4dcb_850c_018df092eac6.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c649d0dc_722e_4d8f_a9d5_b66697477bdf
        if self.c649d0dc_722e_4d8f_a9d5_b66697477bdf:
            _dict['c649d0dc-722e-4d8f-a9d5-b66697477bdf'] = self.c649d0dc_722e_4d8f_a9d5_b66697477bdf.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_4a6eecea_4e11_4448_99a7_e62eacf0f00e
        if self.var_4a6eecea_4e11_4448_99a7_e62eacf0f00e:
            _dict['4a6eecea-4e11-4448-99a7-e62eacf0f00e'] = self.var_4a6eecea_4e11_4448_99a7_e62eacf0f00e.to_dict()
        # override the default output from pydantic by calling `to_dict()` of d003c137_9066_4dab_b87a_f427f3569ecb
        if self.d003c137_9066_4dab_b87a_f427f3569ecb:
            _dict['d003c137-9066-4dab-b87a-f427f3569ecb'] = self.d003c137_9066_4dab_b87a_f427f3569ecb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_0b5bc982_57a1_495e_a25d_7774c0ada464
        if self.var_0b5bc982_57a1_495e_a25d_7774c0ada464:
            _dict['0b5bc982-57a1-495e-a25d-7774c0ada464'] = self.var_0b5bc982_57a1_495e_a25d_7774c0ada464.to_dict()
        # override the default output from pydantic by calling `to_dict()` of aa233ae4_8316_4f3d_90c4_2355713c7829
        if self.aa233ae4_8316_4f3d_90c4_2355713c7829:
            _dict['aa233ae4-8316-4f3d-90c4-2355713c7829'] = self.aa233ae4_8316_4f3d_90c4_2355713c7829.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_6b121e92_2e75_4bb6_ae63_79465b115116
        if self.var_6b121e92_2e75_4bb6_ae63_79465b115116:
            _dict['6b121e92-2e75-4bb6-ae63-79465b115116'] = self.var_6b121e92_2e75_4bb6_ae63_79465b115116.to_dict()
        # override the default output from pydantic by calling `to_dict()` of d46c89de_23af_4ee4_9f8c_1af4e3f807ad
        if self.d46c89de_23af_4ee4_9f8c_1af4e3f807ad:
            _dict['d46c89de-23af-4ee4-9f8c-1af4e3f807ad'] = self.d46c89de_23af_4ee4_9f8c_1af4e3f807ad.to_dict()
        # override the default output from pydantic by calling `to_dict()` of e67c5d6b_04fe_448a_87f1_51211266e6a2
        if self.e67c5d6b_04fe_448a_87f1_51211266e6a2:
            _dict['e67c5d6b-04fe-448a-87f1-51211266e6a2'] = self.e67c5d6b_04fe_448a_87f1_51211266e6a2.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fbb8d0c3_45bc_4c00_a78e_0b09da1dd662
        if self.fbb8d0c3_45bc_4c00_a78e_0b09da1dd662:
            _dict['fbb8d0c3-45bc-4c00-a78e-0b09da1dd662'] = self.fbb8d0c3_45bc_4c00_a78e_0b09da1dd662.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dc49af89_1cfc_4f1c_b6ab_5b4a49223de2
        if self.dc49af89_1cfc_4f1c_b6ab_5b4a49223de2:
            _dict['dc49af89-1cfc-4f1c-b6ab-5b4a49223de2'] = self.dc49af89_1cfc_4f1c_b6ab_5b4a49223de2.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c14fad73_15be_46c8_9763_7f7e5c31379c
        if self.c14fad73_15be_46c8_9763_7f7e5c31379c:
            _dict['c14fad73-15be-46c8-9763-7f7e5c31379c'] = self.c14fad73_15be_46c8_9763_7f7e5c31379c.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "8441420f-0f12-4dcb-850c-018df092eac6": IdentityProviderServiceAppleConfig.from_dict(obj["8441420f-0f12-4dcb-850c-018df092eac6"]) if obj.get("8441420f-0f12-4dcb-850c-018df092eac6") is not None else None,
            "c649d0dc-722e-4d8f-a9d5-b66697477bdf": IdentityProviderServiceAzureADConfig.from_dict(obj["c649d0dc-722e-4d8f-a9d5-b66697477bdf"]) if obj.get("c649d0dc-722e-4d8f-a9d5-b66697477bdf") is not None else None,
            "a8fc9e9c-1722-45ea-b1db-d8d488cb7a73": obj.get("a8fc9e9c-1722-45ea-b1db-d8d488cb7a73"),
            "4a6eecea-4e11-4448-99a7-e62eacf0f00e": IdentityProviderServiceGenericOIDCConfig.from_dict(obj["4a6eecea-4e11-4448-99a7-e62eacf0f00e"]) if obj.get("4a6eecea-4e11-4448-99a7-e62eacf0f00e") is not None else None,
            "d003c137-9066-4dab-b87a-f427f3569ecb": IdentityProviderServiceGitHubConfig.from_dict(obj["d003c137-9066-4dab-b87a-f427f3569ecb"]) if obj.get("d003c137-9066-4dab-b87a-f427f3569ecb") is not None else None,
            "0b5bc982-57a1-495e-a25d-7774c0ada464": IdentityProviderServiceGitHubEnterpriseServerConfig.from_dict(obj["0b5bc982-57a1-495e-a25d-7774c0ada464"]) if obj.get("0b5bc982-57a1-495e-a25d-7774c0ada464") is not None else None,
            "aa233ae4-8316-4f3d-90c4-2355713c7829": IdentityProviderServiceGitLabConfig.from_dict(obj["aa233ae4-8316-4f3d-90c4-2355713c7829"]) if obj.get("aa233ae4-8316-4f3d-90c4-2355713c7829") is not None else None,
            "6b121e92-2e75-4bb6-ae63-79465b115116": IdentityProviderServiceGitLabSelfHostedConfig.from_dict(obj["6b121e92-2e75-4bb6-ae63-79465b115116"]) if obj.get("6b121e92-2e75-4bb6-ae63-79465b115116") is not None else None,
            "d46c89de-23af-4ee4-9f8c-1af4e3f807ad": IdentityProviderServiceGoogleConfig.from_dict(obj["d46c89de-23af-4ee4-9f8c-1af4e3f807ad"]) if obj.get("d46c89de-23af-4ee4-9f8c-1af4e3f807ad") is not None else None,
            "e67c5d6b-04fe-448a-87f1-51211266e6a2": IdentityProviderServiceJWTConfig.from_dict(obj["e67c5d6b-04fe-448a-87f1-51211266e6a2"]) if obj.get("e67c5d6b-04fe-448a-87f1-51211266e6a2") is not None else None,
            "fbb8d0c3-45bc-4c00-a78e-0b09da1dd662": IdentityProviderServiceLDAPConfig.from_dict(obj["fbb8d0c3-45bc-4c00-a78e-0b09da1dd662"]) if obj.get("fbb8d0c3-45bc-4c00-a78e-0b09da1dd662") is not None else None,
            "dc49af89-1cfc-4f1c-b6ab-5b4a49223de2": IdentityProviderServiceOAuthConfig.from_dict(obj["dc49af89-1cfc-4f1c-b6ab-5b4a49223de2"]) if obj.get("dc49af89-1cfc-4f1c-b6ab-5b4a49223de2") is not None else None,
            "c14fad73-15be-46c8-9763-7f7e5c31379c": IdentityProviderServiceSAMLConfig.from_dict(obj["c14fad73-15be-46c8-9763-7f7e5c31379c"]) if obj.get("c14fad73-15be-46c8-9763-7f7e5c31379c") is not None else None
        })
        return _obj


