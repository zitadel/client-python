# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.saml_service_authorization_error import SAMLServiceAuthorizationError
from zitadel_client.models.saml_service_post_response import SAMLServicePostResponse
from zitadel_client.models.saml_service_session import SAMLServiceSession
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response7(BaseModel):
    """
    NoOp200Response7
    """ # noqa: E501
    var_32657d17_3e6d_45c6_b95a_57f0927e4246: Optional[SAMLServiceAuthorizationError] = Field(default=None, alias="32657d17-3e6d-45c6-b95a-57f0927e4246")
    a730faa0_963c_46f7_b1b3_a7b2d884d7c8: Optional[SAMLServicePostResponse] = Field(default=None, alias="a730faa0-963c-46f7-b1b3-a7b2d884d7c8")
    e07bfd13_bce5_4fd7_be03_0e46462e5dea: Optional[Dict[str, Any]] = Field(default=None, alias="e07bfd13-bce5-4fd7-be03-0e46462e5dea")
    e3919a44_f603_416e_86e3_1abcc6493639: Optional[SAMLServiceSession] = Field(default=None, alias="e3919a44-f603-416e-86e3-1abcc6493639")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response7 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_32657d17_3e6d_45c6_b95a_57f0927e4246
        if self.var_32657d17_3e6d_45c6_b95a_57f0927e4246:
            _dict['32657d17-3e6d-45c6-b95a-57f0927e4246'] = self.var_32657d17_3e6d_45c6_b95a_57f0927e4246.to_dict()
        # override the default output from pydantic by calling `to_dict()` of a730faa0_963c_46f7_b1b3_a7b2d884d7c8
        if self.a730faa0_963c_46f7_b1b3_a7b2d884d7c8:
            _dict['a730faa0-963c-46f7-b1b3-a7b2d884d7c8'] = self.a730faa0_963c_46f7_b1b3_a7b2d884d7c8.to_dict()
        # override the default output from pydantic by calling `to_dict()` of e3919a44_f603_416e_86e3_1abcc6493639
        if self.e3919a44_f603_416e_86e3_1abcc6493639:
            _dict['e3919a44-f603-416e-86e3-1abcc6493639'] = self.e3919a44_f603_416e_86e3_1abcc6493639.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response7 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "32657d17-3e6d-45c6-b95a-57f0927e4246": SAMLServiceAuthorizationError.from_dict(obj["32657d17-3e6d-45c6-b95a-57f0927e4246"]) if obj.get("32657d17-3e6d-45c6-b95a-57f0927e4246") is not None else None,
            "a730faa0-963c-46f7-b1b3-a7b2d884d7c8": SAMLServicePostResponse.from_dict(obj["a730faa0-963c-46f7-b1b3-a7b2d884d7c8"]) if obj.get("a730faa0-963c-46f7-b1b3-a7b2d884d7c8") is not None else None,
            "e07bfd13-bce5-4fd7-be03-0e46462e5dea": obj.get("e07bfd13-bce5-4fd7-be03-0e46462e5dea"),
            "e3919a44-f603-416e-86e3-1abcc6493639": SAMLServiceSession.from_dict(obj["e3919a44-f603-416e-86e3-1abcc6493639"]) if obj.get("e3919a44-f603-416e-86e3-1abcc6493639") is not None else None
        })
        return _obj


