# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.beta_session_service_creation_date_query import BetaSessionServiceCreationDateQuery
from zitadel_client.models.beta_session_service_ids_query import BetaSessionServiceIDsQuery
from zitadel_client.models.beta_session_service_send_code import BetaSessionServiceSendCode
from zitadel_client.models.beta_session_service_user_id_query import BetaSessionServiceUserIDQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response1(BaseModel):
    """
    NoOp200Response1
    """ # noqa: E501
    var_467230a3_405a_4c73_997e_cf4ba5f50864: Optional[BetaSessionServiceCreationDateQuery] = Field(default=None, alias="467230a3-405a-4c73-997e-cf4ba5f50864")
    var_2f6dde9d_ca1f_4105_b398_05a2968dde24: Optional[BetaSessionServiceIDsQuery] = Field(default=None, alias="2f6dde9d-ca1f-4105-b398-05a2968dde24")
    var_17a12b0d_0ee3_4344_ae96_716aacbeb6f6: Optional[Dict[str, Any]] = Field(default=None, alias="17a12b0d-0ee3-4344-ae96-716aacbeb6f6")
    afcfd581_bc9e_419b_8784_b7e60595ed66: Optional[BetaSessionServiceSendCode] = Field(default=None, alias="afcfd581-bc9e-419b-8784-b7e60595ed66")
    var_66906b6c_a659_4f82_a989_5a500cbdc203: Optional[BetaSessionServiceUserIDQuery] = Field(default=None, alias="66906b6c-a659-4f82-a989-5a500cbdc203")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response1 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_467230a3_405a_4c73_997e_cf4ba5f50864
        if self.var_467230a3_405a_4c73_997e_cf4ba5f50864:
            _dict['467230a3-405a-4c73-997e-cf4ba5f50864'] = self.var_467230a3_405a_4c73_997e_cf4ba5f50864.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_2f6dde9d_ca1f_4105_b398_05a2968dde24
        if self.var_2f6dde9d_ca1f_4105_b398_05a2968dde24:
            _dict['2f6dde9d-ca1f-4105-b398-05a2968dde24'] = self.var_2f6dde9d_ca1f_4105_b398_05a2968dde24.to_dict()
        # override the default output from pydantic by calling `to_dict()` of afcfd581_bc9e_419b_8784_b7e60595ed66
        if self.afcfd581_bc9e_419b_8784_b7e60595ed66:
            _dict['afcfd581-bc9e-419b-8784-b7e60595ed66'] = self.afcfd581_bc9e_419b_8784_b7e60595ed66.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_66906b6c_a659_4f82_a989_5a500cbdc203
        if self.var_66906b6c_a659_4f82_a989_5a500cbdc203:
            _dict['66906b6c-a659-4f82-a989-5a500cbdc203'] = self.var_66906b6c_a659_4f82_a989_5a500cbdc203.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response1 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "467230a3-405a-4c73-997e-cf4ba5f50864": BetaSessionServiceCreationDateQuery.from_dict(obj["467230a3-405a-4c73-997e-cf4ba5f50864"]) if obj.get("467230a3-405a-4c73-997e-cf4ba5f50864") is not None else None,
            "2f6dde9d-ca1f-4105-b398-05a2968dde24": BetaSessionServiceIDsQuery.from_dict(obj["2f6dde9d-ca1f-4105-b398-05a2968dde24"]) if obj.get("2f6dde9d-ca1f-4105-b398-05a2968dde24") is not None else None,
            "17a12b0d-0ee3-4344-ae96-716aacbeb6f6": obj.get("17a12b0d-0ee3-4344-ae96-716aacbeb6f6"),
            "afcfd581-bc9e-419b-8784-b7e60595ed66": BetaSessionServiceSendCode.from_dict(obj["afcfd581-bc9e-419b-8784-b7e60595ed66"]) if obj.get("afcfd581-bc9e-419b-8784-b7e60595ed66") is not None else None,
            "66906b6c-a659-4f82-a989-5a500cbdc203": BetaSessionServiceUserIDQuery.from_dict(obj["66906b6c-a659-4f82-a989-5a500cbdc203"]) if obj.get("66906b6c-a659-4f82-a989-5a500cbdc203") is not None else None
        })
        return _obj


