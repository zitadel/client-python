# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.session_service_creation_date_query import SessionServiceCreationDateQuery
from zitadel_client.models.session_service_creator_query import SessionServiceCreatorQuery
from zitadel_client.models.session_service_ids_query import SessionServiceIDsQuery
from zitadel_client.models.session_service_send_code import SessionServiceSendCode
from zitadel_client.models.session_service_user_agent_query import SessionServiceUserAgentQuery
from zitadel_client.models.session_service_user_id_query import SessionServiceUserIDQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response2(BaseModel):
    """
    NoOp200Response2
    """ # noqa: E501
    var_0d2cb2f3_2a8c_4d3b_98e7_c8122d047303: Optional[SessionServiceCreationDateQuery] = Field(default=None, alias="0d2cb2f3-2a8c-4d3b-98e7-c8122d047303")
    var_44c57bbe_22c5_45be_9a41_40cac5f93c9a: Optional[SessionServiceCreatorQuery] = Field(default=None, alias="44c57bbe-22c5-45be-9a41-40cac5f93c9a")
    ae8a3041_6a16_4743_8f70_3e9991abc263: Optional[SessionServiceIDsQuery] = Field(default=None, alias="ae8a3041-6a16-4743-8f70-3e9991abc263")
    var_9921edc5_b3bd_4d6f_b078_73e4884f1189: Optional[Dict[str, Any]] = Field(default=None, alias="9921edc5-b3bd-4d6f-b078-73e4884f1189")
    var_3894714d_b1ac_498e_81f0_fa28ec0b1f38: Optional[SessionServiceSendCode] = Field(default=None, alias="3894714d-b1ac-498e-81f0-fa28ec0b1f38")
    a9c30361_4268_47d1_9a2e_aeb7b6d7433c: Optional[SessionServiceUserAgentQuery] = Field(default=None, alias="a9c30361-4268-47d1-9a2e-aeb7b6d7433c")
    var_6e9c8f15_1036_4721_97de_a07052388a76: Optional[SessionServiceUserIDQuery] = Field(default=None, alias="6e9c8f15-1036-4721-97de-a07052388a76")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response2 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_0d2cb2f3_2a8c_4d3b_98e7_c8122d047303
        if self.var_0d2cb2f3_2a8c_4d3b_98e7_c8122d047303:
            _dict['0d2cb2f3-2a8c-4d3b-98e7-c8122d047303'] = self.var_0d2cb2f3_2a8c_4d3b_98e7_c8122d047303.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_44c57bbe_22c5_45be_9a41_40cac5f93c9a
        if self.var_44c57bbe_22c5_45be_9a41_40cac5f93c9a:
            _dict['44c57bbe-22c5-45be-9a41-40cac5f93c9a'] = self.var_44c57bbe_22c5_45be_9a41_40cac5f93c9a.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ae8a3041_6a16_4743_8f70_3e9991abc263
        if self.ae8a3041_6a16_4743_8f70_3e9991abc263:
            _dict['ae8a3041-6a16-4743-8f70-3e9991abc263'] = self.ae8a3041_6a16_4743_8f70_3e9991abc263.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_3894714d_b1ac_498e_81f0_fa28ec0b1f38
        if self.var_3894714d_b1ac_498e_81f0_fa28ec0b1f38:
            _dict['3894714d-b1ac-498e-81f0-fa28ec0b1f38'] = self.var_3894714d_b1ac_498e_81f0_fa28ec0b1f38.to_dict()
        # override the default output from pydantic by calling `to_dict()` of a9c30361_4268_47d1_9a2e_aeb7b6d7433c
        if self.a9c30361_4268_47d1_9a2e_aeb7b6d7433c:
            _dict['a9c30361-4268-47d1-9a2e-aeb7b6d7433c'] = self.a9c30361_4268_47d1_9a2e_aeb7b6d7433c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_6e9c8f15_1036_4721_97de_a07052388a76
        if self.var_6e9c8f15_1036_4721_97de_a07052388a76:
            _dict['6e9c8f15-1036-4721-97de-a07052388a76'] = self.var_6e9c8f15_1036_4721_97de_a07052388a76.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response2 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "0d2cb2f3-2a8c-4d3b-98e7-c8122d047303": SessionServiceCreationDateQuery.from_dict(obj["0d2cb2f3-2a8c-4d3b-98e7-c8122d047303"]) if obj.get("0d2cb2f3-2a8c-4d3b-98e7-c8122d047303") is not None else None,
            "44c57bbe-22c5-45be-9a41-40cac5f93c9a": SessionServiceCreatorQuery.from_dict(obj["44c57bbe-22c5-45be-9a41-40cac5f93c9a"]) if obj.get("44c57bbe-22c5-45be-9a41-40cac5f93c9a") is not None else None,
            "ae8a3041-6a16-4743-8f70-3e9991abc263": SessionServiceIDsQuery.from_dict(obj["ae8a3041-6a16-4743-8f70-3e9991abc263"]) if obj.get("ae8a3041-6a16-4743-8f70-3e9991abc263") is not None else None,
            "9921edc5-b3bd-4d6f-b078-73e4884f1189": obj.get("9921edc5-b3bd-4d6f-b078-73e4884f1189"),
            "3894714d-b1ac-498e-81f0-fa28ec0b1f38": SessionServiceSendCode.from_dict(obj["3894714d-b1ac-498e-81f0-fa28ec0b1f38"]) if obj.get("3894714d-b1ac-498e-81f0-fa28ec0b1f38") is not None else None,
            "a9c30361-4268-47d1-9a2e-aeb7b6d7433c": SessionServiceUserAgentQuery.from_dict(obj["a9c30361-4268-47d1-9a2e-aeb7b6d7433c"]) if obj.get("a9c30361-4268-47d1-9a2e-aeb7b6d7433c") is not None else None,
            "6e9c8f15-1036-4721-97de-a07052388a76": SessionServiceUserIDQuery.from_dict(obj["6e9c8f15-1036-4721-97de-a07052388a76"]) if obj.get("6e9c8f15-1036-4721-97de-a07052388a76") is not None else None
        })
        return _obj


