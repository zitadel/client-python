# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.beta_authorization_service_id_filter import BetaAuthorizationServiceIDFilter
from zitadel_client.models.beta_authorization_service_in_ids_filter import BetaAuthorizationServiceInIDsFilter
from zitadel_client.models.beta_authorization_service_project_name_query import BetaAuthorizationServiceProjectNameQuery
from zitadel_client.models.beta_authorization_service_role_key_query import BetaAuthorizationServiceRoleKeyQuery
from zitadel_client.models.beta_authorization_service_state_query import BetaAuthorizationServiceStateQuery
from zitadel_client.models.beta_authorization_service_user_display_name_query import BetaAuthorizationServiceUserDisplayNameQuery
from zitadel_client.models.beta_authorization_service_user_preferred_login_name_query import BetaAuthorizationServiceUserPreferredLoginNameQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response11(BaseModel):
    """
    NoOp200Response11
    """ # noqa: E501
    var_19a07cef_6b2c_4039_a7e2_277a953a55f8: Optional[BetaAuthorizationServiceIDFilter] = Field(default=None, alias="19a07cef-6b2c-4039-a7e2-277a953a55f8")
    var_51e7afa4_34a6_412d_8ef5_64de71a25191: Optional[BetaAuthorizationServiceInIDsFilter] = Field(default=None, alias="51e7afa4-34a6-412d-8ef5-64de71a25191")
    var_1256c2e5_c43d_41e7_b8ae_bef9cb84c1fa: Optional[BetaAuthorizationServiceProjectNameQuery] = Field(default=None, alias="1256c2e5-c43d-41e7-b8ae-bef9cb84c1fa")
    var_37b98010_7726_4515_b91f_cefd47beed1c: Optional[BetaAuthorizationServiceRoleKeyQuery] = Field(default=None, alias="37b98010-7726-4515-b91f-cefd47beed1c")
    aca88980_27da_4104_9378_2a34918f75a9: Optional[BetaAuthorizationServiceStateQuery] = Field(default=None, alias="aca88980-27da-4104-9378-2a34918f75a9")
    var_17dd4bbe_de6b_4824_b891_423936dda342: Optional[BetaAuthorizationServiceUserDisplayNameQuery] = Field(default=None, alias="17dd4bbe-de6b-4824-b891-423936dda342")
    var_692c91d9_64cf_41e2_810c_f79581ff11aa: Optional[BetaAuthorizationServiceUserPreferredLoginNameQuery] = Field(default=None, alias="692c91d9-64cf-41e2-810c-f79581ff11aa")
    __properties: ClassVar[List[str]] = ["19a07cef-6b2c-4039-a7e2-277a953a55f8", "51e7afa4-34a6-412d-8ef5-64de71a25191", "1256c2e5-c43d-41e7-b8ae-bef9cb84c1fa", "37b98010-7726-4515-b91f-cefd47beed1c", "aca88980-27da-4104-9378-2a34918f75a9", "17dd4bbe-de6b-4824-b891-423936dda342", "692c91d9-64cf-41e2-810c-f79581ff11aa"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response11 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_19a07cef_6b2c_4039_a7e2_277a953a55f8
        if self.var_19a07cef_6b2c_4039_a7e2_277a953a55f8:
            _dict['19a07cef-6b2c-4039-a7e2-277a953a55f8'] = self.var_19a07cef_6b2c_4039_a7e2_277a953a55f8.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_51e7afa4_34a6_412d_8ef5_64de71a25191
        if self.var_51e7afa4_34a6_412d_8ef5_64de71a25191:
            _dict['51e7afa4-34a6-412d-8ef5-64de71a25191'] = self.var_51e7afa4_34a6_412d_8ef5_64de71a25191.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_1256c2e5_c43d_41e7_b8ae_bef9cb84c1fa
        if self.var_1256c2e5_c43d_41e7_b8ae_bef9cb84c1fa:
            _dict['1256c2e5-c43d-41e7-b8ae-bef9cb84c1fa'] = self.var_1256c2e5_c43d_41e7_b8ae_bef9cb84c1fa.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_37b98010_7726_4515_b91f_cefd47beed1c
        if self.var_37b98010_7726_4515_b91f_cefd47beed1c:
            _dict['37b98010-7726-4515-b91f-cefd47beed1c'] = self.var_37b98010_7726_4515_b91f_cefd47beed1c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of aca88980_27da_4104_9378_2a34918f75a9
        if self.aca88980_27da_4104_9378_2a34918f75a9:
            _dict['aca88980-27da-4104-9378-2a34918f75a9'] = self.aca88980_27da_4104_9378_2a34918f75a9.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_17dd4bbe_de6b_4824_b891_423936dda342
        if self.var_17dd4bbe_de6b_4824_b891_423936dda342:
            _dict['17dd4bbe-de6b-4824-b891-423936dda342'] = self.var_17dd4bbe_de6b_4824_b891_423936dda342.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_692c91d9_64cf_41e2_810c_f79581ff11aa
        if self.var_692c91d9_64cf_41e2_810c_f79581ff11aa:
            _dict['692c91d9-64cf-41e2-810c-f79581ff11aa'] = self.var_692c91d9_64cf_41e2_810c_f79581ff11aa.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response11 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "19a07cef-6b2c-4039-a7e2-277a953a55f8": BetaAuthorizationServiceIDFilter.from_dict(obj["19a07cef-6b2c-4039-a7e2-277a953a55f8"]) if obj.get("19a07cef-6b2c-4039-a7e2-277a953a55f8") is not None else None,
            "51e7afa4-34a6-412d-8ef5-64de71a25191": BetaAuthorizationServiceInIDsFilter.from_dict(obj["51e7afa4-34a6-412d-8ef5-64de71a25191"]) if obj.get("51e7afa4-34a6-412d-8ef5-64de71a25191") is not None else None,
            "1256c2e5-c43d-41e7-b8ae-bef9cb84c1fa": BetaAuthorizationServiceProjectNameQuery.from_dict(obj["1256c2e5-c43d-41e7-b8ae-bef9cb84c1fa"]) if obj.get("1256c2e5-c43d-41e7-b8ae-bef9cb84c1fa") is not None else None,
            "37b98010-7726-4515-b91f-cefd47beed1c": BetaAuthorizationServiceRoleKeyQuery.from_dict(obj["37b98010-7726-4515-b91f-cefd47beed1c"]) if obj.get("37b98010-7726-4515-b91f-cefd47beed1c") is not None else None,
            "aca88980-27da-4104-9378-2a34918f75a9": BetaAuthorizationServiceStateQuery.from_dict(obj["aca88980-27da-4104-9378-2a34918f75a9"]) if obj.get("aca88980-27da-4104-9378-2a34918f75a9") is not None else None,
            "17dd4bbe-de6b-4824-b891-423936dda342": BetaAuthorizationServiceUserDisplayNameQuery.from_dict(obj["17dd4bbe-de6b-4824-b891-423936dda342"]) if obj.get("17dd4bbe-de6b-4824-b891-423936dda342") is not None else None,
            "692c91d9-64cf-41e2-810c-f79581ff11aa": BetaAuthorizationServiceUserPreferredLoginNameQuery.from_dict(obj["692c91d9-64cf-41e2-810c-f79581ff11aa"]) if obj.get("692c91d9-64cf-41e2-810c-f79581ff11aa") is not None else None
        })
        return _obj


