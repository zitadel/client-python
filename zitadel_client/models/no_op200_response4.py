# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.session_service_creation_date_query import SessionServiceCreationDateQuery
from zitadel_client.models.session_service_creator_query import SessionServiceCreatorQuery
from zitadel_client.models.session_service_ids_query import SessionServiceIDsQuery
from zitadel_client.models.session_service_send_code import SessionServiceSendCode
from zitadel_client.models.session_service_user_agent_query import SessionServiceUserAgentQuery
from zitadel_client.models.session_service_user_id_query import SessionServiceUserIDQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response4(BaseModel):
    """
    NoOp200Response4
    """ # noqa: E501
    var_92efaf3f_183d_4dab_b2f6_b56cb5a0264b: Optional[SessionServiceCreationDateQuery] = Field(default=None, alias="92efaf3f-183d-4dab-b2f6-b56cb5a0264b")
    var_92e1aabb_9f96_42a6_b430_edb9f29dbf96: Optional[SessionServiceCreatorQuery] = Field(default=None, alias="92e1aabb-9f96-42a6-b430-edb9f29dbf96")
    var_083493f6_5d72_4513_83fb_9d5f178945a7: Optional[SessionServiceIDsQuery] = Field(default=None, alias="083493f6-5d72-4513-83fb-9d5f178945a7")
    var_38908444_a5bf_47a3_8297_2b1943eef4db: Optional[Dict[str, Any]] = Field(default=None, alias="38908444-a5bf-47a3-8297-2b1943eef4db")
    b2b79f35_03fb_473a_baf9_e458501ff7cd: Optional[SessionServiceSendCode] = Field(default=None, alias="b2b79f35-03fb-473a-baf9-e458501ff7cd")
    var_52526610_1d1d_4f47_8dfc_33cd53a38165: Optional[SessionServiceUserAgentQuery] = Field(default=None, alias="52526610-1d1d-4f47-8dfc-33cd53a38165")
    var_35b955a4_0ab5_4075_864d_72eadf73bb86: Optional[SessionServiceUserIDQuery] = Field(default=None, alias="35b955a4-0ab5-4075-864d-72eadf73bb86")
    __properties: ClassVar[List[str]] = ["92efaf3f-183d-4dab-b2f6-b56cb5a0264b", "92e1aabb-9f96-42a6-b430-edb9f29dbf96", "083493f6-5d72-4513-83fb-9d5f178945a7", "38908444-a5bf-47a3-8297-2b1943eef4db", "b2b79f35-03fb-473a-baf9-e458501ff7cd", "52526610-1d1d-4f47-8dfc-33cd53a38165", "35b955a4-0ab5-4075-864d-72eadf73bb86"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response4 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_92efaf3f_183d_4dab_b2f6_b56cb5a0264b
        if self.var_92efaf3f_183d_4dab_b2f6_b56cb5a0264b:
            _dict['92efaf3f-183d-4dab-b2f6-b56cb5a0264b'] = self.var_92efaf3f_183d_4dab_b2f6_b56cb5a0264b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_92e1aabb_9f96_42a6_b430_edb9f29dbf96
        if self.var_92e1aabb_9f96_42a6_b430_edb9f29dbf96:
            _dict['92e1aabb-9f96-42a6-b430-edb9f29dbf96'] = self.var_92e1aabb_9f96_42a6_b430_edb9f29dbf96.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_083493f6_5d72_4513_83fb_9d5f178945a7
        if self.var_083493f6_5d72_4513_83fb_9d5f178945a7:
            _dict['083493f6-5d72-4513-83fb-9d5f178945a7'] = self.var_083493f6_5d72_4513_83fb_9d5f178945a7.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b2b79f35_03fb_473a_baf9_e458501ff7cd
        if self.b2b79f35_03fb_473a_baf9_e458501ff7cd:
            _dict['b2b79f35-03fb-473a-baf9-e458501ff7cd'] = self.b2b79f35_03fb_473a_baf9_e458501ff7cd.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_52526610_1d1d_4f47_8dfc_33cd53a38165
        if self.var_52526610_1d1d_4f47_8dfc_33cd53a38165:
            _dict['52526610-1d1d-4f47-8dfc-33cd53a38165'] = self.var_52526610_1d1d_4f47_8dfc_33cd53a38165.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_35b955a4_0ab5_4075_864d_72eadf73bb86
        if self.var_35b955a4_0ab5_4075_864d_72eadf73bb86:
            _dict['35b955a4-0ab5-4075-864d-72eadf73bb86'] = self.var_35b955a4_0ab5_4075_864d_72eadf73bb86.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response4 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "92efaf3f-183d-4dab-b2f6-b56cb5a0264b": SessionServiceCreationDateQuery.from_dict(obj["92efaf3f-183d-4dab-b2f6-b56cb5a0264b"]) if obj.get("92efaf3f-183d-4dab-b2f6-b56cb5a0264b") is not None else None,
            "92e1aabb-9f96-42a6-b430-edb9f29dbf96": SessionServiceCreatorQuery.from_dict(obj["92e1aabb-9f96-42a6-b430-edb9f29dbf96"]) if obj.get("92e1aabb-9f96-42a6-b430-edb9f29dbf96") is not None else None,
            "083493f6-5d72-4513-83fb-9d5f178945a7": SessionServiceIDsQuery.from_dict(obj["083493f6-5d72-4513-83fb-9d5f178945a7"]) if obj.get("083493f6-5d72-4513-83fb-9d5f178945a7") is not None else None,
            "38908444-a5bf-47a3-8297-2b1943eef4db": obj.get("38908444-a5bf-47a3-8297-2b1943eef4db"),
            "b2b79f35-03fb-473a-baf9-e458501ff7cd": SessionServiceSendCode.from_dict(obj["b2b79f35-03fb-473a-baf9-e458501ff7cd"]) if obj.get("b2b79f35-03fb-473a-baf9-e458501ff7cd") is not None else None,
            "52526610-1d1d-4f47-8dfc-33cd53a38165": SessionServiceUserAgentQuery.from_dict(obj["52526610-1d1d-4f47-8dfc-33cd53a38165"]) if obj.get("52526610-1d1d-4f47-8dfc-33cd53a38165") is not None else None,
            "35b955a4-0ab5-4075-864d-72eadf73bb86": SessionServiceUserIDQuery.from_dict(obj["35b955a4-0ab5-4075-864d-72eadf73bb86"]) if obj.get("35b955a4-0ab5-4075-864d-72eadf73bb86") is not None else None
        })
        return _obj


