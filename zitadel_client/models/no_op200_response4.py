# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.user_service_and_query import UserServiceAndQuery
from zitadel_client.models.user_service_auth_factor_u2_f import UserServiceAuthFactorU2F
from zitadel_client.models.user_service_display_name_query import UserServiceDisplayNameQuery
from zitadel_client.models.user_service_email_query import UserServiceEmailQuery
from zitadel_client.models.user_service_first_name_query import UserServiceFirstNameQuery
from zitadel_client.models.user_service_hashed_password import UserServiceHashedPassword
from zitadel_client.models.user_service_human_user import UserServiceHumanUser
from zitadel_client.models.user_service_idp_intent import UserServiceIDPIntent
from zitadel_client.models.user_service_idpldap_access_information import UserServiceIDPLDAPAccessInformation
from zitadel_client.models.user_service_idpo_auth_access_information import UserServiceIDPOAuthAccessInformation
from zitadel_client.models.user_service_idpsaml_access_information import UserServiceIDPSAMLAccessInformation
from zitadel_client.models.user_service_in_user_emails_query import UserServiceInUserEmailsQuery
from zitadel_client.models.user_service_in_user_id_query import UserServiceInUserIDQuery
from zitadel_client.models.user_service_last_name_query import UserServiceLastNameQuery
from zitadel_client.models.user_service_ldap_credentials import UserServiceLDAPCredentials
from zitadel_client.models.user_service_login_name_query import UserServiceLoginNameQuery
from zitadel_client.models.user_service_machine_user import UserServiceMachineUser
from zitadel_client.models.user_service_nick_name_query import UserServiceNickNameQuery
from zitadel_client.models.user_service_not_query import UserServiceNotQuery
from zitadel_client.models.user_service_or_query import UserServiceOrQuery
from zitadel_client.models.user_service_organization_id_query import UserServiceOrganizationIdQuery
from zitadel_client.models.user_service_password import UserServicePassword
from zitadel_client.models.user_service_phone_query import UserServicePhoneQuery
from zitadel_client.models.user_service_redirect_urls import UserServiceRedirectURLs
from zitadel_client.models.user_service_send_email_verification_code import UserServiceSendEmailVerificationCode
from zitadel_client.models.user_service_send_invite_code import UserServiceSendInviteCode
from zitadel_client.models.user_service_send_passkey_registration_link import UserServiceSendPasskeyRegistrationLink
from zitadel_client.models.user_service_send_password_reset_link import UserServiceSendPasswordResetLink
from zitadel_client.models.user_service_state_query import UserServiceStateQuery
from zitadel_client.models.user_service_type_query import UserServiceTypeQuery
from zitadel_client.models.user_service_user_name_query import UserServiceUserNameQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response4(BaseModel):
    """
    NoOp200Response4
    """ # noqa: E501
    f83cbcd6_5036_4bf9_81df_5e981a715601: Optional[UserServiceAndQuery] = Field(default=None, alias="f83cbcd6-5036-4bf9-81df-5e981a715601")
    var_2c71a3b1_ca6e_4083_b890_ce7e1417208c: Optional[Dict[str, Any]] = Field(default=None, alias="2c71a3b1-ca6e-4083-b890-ce7e1417208c")
    d5c89d63_8d40_4cc1_bf55_d80555c47869: Optional[Dict[str, Any]] = Field(default=None, alias="d5c89d63-8d40-4cc1-bf55-d80555c47869")
    c6f1c3a5_af2b_42db_890c_3710b529d4c5: Optional[Dict[str, Any]] = Field(default=None, alias="c6f1c3a5-af2b-42db-890c-3710b529d4c5")
    dfdd898b_6379_4e2f_8c22_5cafcd3d5ef6: Optional[UserServiceAuthFactorU2F] = Field(default=None, alias="dfdd898b-6379-4e2f-8c22-5cafcd3d5ef6")
    var_4bbfd13b_c962_483f_b46f_2ee3fffec835: Optional[UserServiceDisplayNameQuery] = Field(default=None, alias="4bbfd13b-c962-483f-b46f-2ee3fffec835")
    b0c12bff_7b73_4063_9e3a_247d21b6573c: Optional[UserServiceEmailQuery] = Field(default=None, alias="b0c12bff-7b73-4063-9e3a-247d21b6573c")
    var_88ca59f6_a6a7_4734_8fe7_76e79f648e60: Optional[UserServiceFirstNameQuery] = Field(default=None, alias="88ca59f6-a6a7-4734-8fe7-76e79f648e60")
    f110e839_fa11_4c73_aeea_d6660a4723a9: Optional[UserServiceHashedPassword] = Field(default=None, alias="f110e839-fa11-4c73-aeea-d6660a4723a9")
    ac724ea0_f3ed_4fcb_999b_ee9af910fbe6: Optional[UserServiceHumanUser] = Field(default=None, alias="ac724ea0-f3ed-4fcb-999b-ee9af910fbe6")
    a3e3b385_88a5_4472_b687_879df649ca3e: Optional[UserServiceIDPIntent] = Field(default=None, alias="a3e3b385-88a5-4472-b687-879df649ca3e")
    var_39c2a131_53aa_4334_92a0_ac7338b2ce67: Optional[UserServiceIDPLDAPAccessInformation] = Field(default=None, alias="39c2a131-53aa-4334-92a0-ac7338b2ce67")
    b742b05f_e9ca_4dab_a966_28ac2d0da16c: Optional[UserServiceIDPOAuthAccessInformation] = Field(default=None, alias="b742b05f-e9ca-4dab-a966-28ac2d0da16c")
    var_5098155e_573f_4c48_85fe_4f3c9c588931: Optional[UserServiceIDPSAMLAccessInformation] = Field(default=None, alias="5098155e-573f-4c48-85fe-4f3c9c588931")
    var_0e608113_4718_441e_9482_b82d45d55586: Optional[UserServiceInUserEmailsQuery] = Field(default=None, alias="0e608113-4718-441e-9482-b82d45d55586")
    b06ee9a4_21ac_446e_b16f_9ee6703c52f2: Optional[UserServiceInUserIDQuery] = Field(default=None, alias="b06ee9a4-21ac-446e-b16f-9ee6703c52f2")
    c52030ba_0a5d_48bf_8956_396a28e6203b: Optional[UserServiceLDAPCredentials] = Field(default=None, alias="c52030ba-0a5d-48bf-8956-396a28e6203b")
    var_93616c1c_6556_4f8d_9446_aa25ddb024fd: Optional[UserServiceLastNameQuery] = Field(default=None, alias="93616c1c-6556-4f8d-9446-aa25ddb024fd")
    var_73c97b6f_ecbc_46d9_b33a_c76b0193fa24: Optional[UserServiceLoginNameQuery] = Field(default=None, alias="73c97b6f-ecbc-46d9-b33a-c76b0193fa24")
    var_9237e11b_e859_48c7_99d8_37be608b578f: Optional[UserServiceMachineUser] = Field(default=None, alias="9237e11b-e859-48c7-99d8-37be608b578f")
    var_41ea4efa_714b_49a0_b7a4_5ea0accb986d: Optional[UserServiceNickNameQuery] = Field(default=None, alias="41ea4efa-714b-49a0-b7a4-5ea0accb986d")
    a614946e_6bd0_4b26_b947_4d18205eda35: Optional[UserServiceNotQuery] = Field(default=None, alias="a614946e-6bd0-4b26-b947-4d18205eda35")
    var_652fb458_3243_44c1_b75a_9dcf0b130c7b: Optional[UserServiceOrQuery] = Field(default=None, alias="652fb458-3243-44c1-b75a-9dcf0b130c7b")
    var_0063cccd_e3f7_4f83_8a9f_f9f2f2001fa9: Optional[UserServiceOrganizationIdQuery] = Field(default=None, alias="0063cccd-e3f7-4f83-8a9f-f9f2f2001fa9")
    var_5340fb08_d545_4c8c_b47a_ecb6bfaa621a: Optional[UserServicePassword] = Field(default=None, alias="5340fb08-d545-4c8c-b47a-ecb6bfaa621a")
    ed2e8b69_6e67_4202_a1b0_ecfd937d2ddf: Optional[UserServicePhoneQuery] = Field(default=None, alias="ed2e8b69-6e67-4202-a1b0-ecfd937d2ddf")
    var_9e93d182_2acf_4856_a916_6e0d81d39cea: Optional[UserServiceRedirectURLs] = Field(default=None, alias="9e93d182-2acf-4856-a916-6e0d81d39cea")
    var_1fc91c19_eef2_45c8_8514_6c624f785660: Optional[Dict[str, Any]] = Field(default=None, alias="1fc91c19-eef2-45c8-8514-6c624f785660")
    c13ba8a1_4283_4a8c_9291_126631d1ad41: Optional[Dict[str, Any]] = Field(default=None, alias="c13ba8a1-4283-4a8c-9291-126631d1ad41")
    var_3e19c972_6f3f_4eb6_8ca2_96cd9f2087ea: Optional[Dict[str, Any]] = Field(default=None, alias="3e19c972-6f3f-4eb6-8ca2-96cd9f2087ea")
    var_74045de4_94c8_4118_b0a2_e40a23bf4399: Optional[Dict[str, Any]] = Field(default=None, alias="74045de4-94c8-4118-b0a2-e40a23bf4399")
    f2f1dabe_90ec_4e66_bb06_308dda585c74: Optional[Dict[str, Any]] = Field(default=None, alias="f2f1dabe-90ec-4e66-bb06-308dda585c74")
    var_98d4b310_bd3a_4be3_954e_393580550f8e: Optional[UserServiceSendEmailVerificationCode] = Field(default=None, alias="98d4b310-bd3a-4be3-954e-393580550f8e")
    var_9dd39bba_3a07_4732_9fba_b304fd0e5a88: Optional[UserServiceSendInviteCode] = Field(default=None, alias="9dd39bba-3a07-4732-9fba-b304fd0e5a88")
    var_236b67a6_26aa_4cf7_9c3d_f15e31eef06b: Optional[UserServiceSendPasskeyRegistrationLink] = Field(default=None, alias="236b67a6-26aa-4cf7-9c3d-f15e31eef06b")
    var_8a890a58_c2fc_4784_86de_6d34c866bc6d: Optional[UserServiceSendPasswordResetLink] = Field(default=None, alias="8a890a58-c2fc-4784-86de-6d34c866bc6d")
    var_80a2ea01_67c9_4c08_a15d_8aa8c5f65814: Optional[Dict[str, Any]] = Field(default=None, alias="80a2ea01-67c9-4c08-a15d-8aa8c5f65814")
    fb1210fc_3097_44c9_adfe_b5f65ae80aad: Optional[UserServiceStateQuery] = Field(default=None, alias="fb1210fc-3097-44c9-adfe-b5f65ae80aad")
    var_5453af57_5195_41e1_a89a_815aefafd209: Optional[UserServiceTypeQuery] = Field(default=None, alias="5453af57-5195-41e1-a89a-815aefafd209")
    ffb17b46_e3dc_4eaa_b8fe_611e1ace506d: Optional[UserServiceUserNameQuery] = Field(default=None, alias="ffb17b46-e3dc-4eaa-b8fe-611e1ace506d")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response4 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of f83cbcd6_5036_4bf9_81df_5e981a715601
        if self.f83cbcd6_5036_4bf9_81df_5e981a715601:
            _dict['f83cbcd6-5036-4bf9-81df-5e981a715601'] = self.f83cbcd6_5036_4bf9_81df_5e981a715601.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dfdd898b_6379_4e2f_8c22_5cafcd3d5ef6
        if self.dfdd898b_6379_4e2f_8c22_5cafcd3d5ef6:
            _dict['dfdd898b-6379-4e2f-8c22-5cafcd3d5ef6'] = self.dfdd898b_6379_4e2f_8c22_5cafcd3d5ef6.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_4bbfd13b_c962_483f_b46f_2ee3fffec835
        if self.var_4bbfd13b_c962_483f_b46f_2ee3fffec835:
            _dict['4bbfd13b-c962-483f-b46f-2ee3fffec835'] = self.var_4bbfd13b_c962_483f_b46f_2ee3fffec835.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b0c12bff_7b73_4063_9e3a_247d21b6573c
        if self.b0c12bff_7b73_4063_9e3a_247d21b6573c:
            _dict['b0c12bff-7b73-4063-9e3a-247d21b6573c'] = self.b0c12bff_7b73_4063_9e3a_247d21b6573c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_88ca59f6_a6a7_4734_8fe7_76e79f648e60
        if self.var_88ca59f6_a6a7_4734_8fe7_76e79f648e60:
            _dict['88ca59f6-a6a7-4734-8fe7-76e79f648e60'] = self.var_88ca59f6_a6a7_4734_8fe7_76e79f648e60.to_dict()
        # override the default output from pydantic by calling `to_dict()` of f110e839_fa11_4c73_aeea_d6660a4723a9
        if self.f110e839_fa11_4c73_aeea_d6660a4723a9:
            _dict['f110e839-fa11-4c73-aeea-d6660a4723a9'] = self.f110e839_fa11_4c73_aeea_d6660a4723a9.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ac724ea0_f3ed_4fcb_999b_ee9af910fbe6
        if self.ac724ea0_f3ed_4fcb_999b_ee9af910fbe6:
            _dict['ac724ea0-f3ed-4fcb-999b-ee9af910fbe6'] = self.ac724ea0_f3ed_4fcb_999b_ee9af910fbe6.to_dict()
        # override the default output from pydantic by calling `to_dict()` of a3e3b385_88a5_4472_b687_879df649ca3e
        if self.a3e3b385_88a5_4472_b687_879df649ca3e:
            _dict['a3e3b385-88a5-4472-b687-879df649ca3e'] = self.a3e3b385_88a5_4472_b687_879df649ca3e.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_39c2a131_53aa_4334_92a0_ac7338b2ce67
        if self.var_39c2a131_53aa_4334_92a0_ac7338b2ce67:
            _dict['39c2a131-53aa-4334-92a0-ac7338b2ce67'] = self.var_39c2a131_53aa_4334_92a0_ac7338b2ce67.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b742b05f_e9ca_4dab_a966_28ac2d0da16c
        if self.b742b05f_e9ca_4dab_a966_28ac2d0da16c:
            _dict['b742b05f-e9ca-4dab-a966-28ac2d0da16c'] = self.b742b05f_e9ca_4dab_a966_28ac2d0da16c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_5098155e_573f_4c48_85fe_4f3c9c588931
        if self.var_5098155e_573f_4c48_85fe_4f3c9c588931:
            _dict['5098155e-573f-4c48-85fe-4f3c9c588931'] = self.var_5098155e_573f_4c48_85fe_4f3c9c588931.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_0e608113_4718_441e_9482_b82d45d55586
        if self.var_0e608113_4718_441e_9482_b82d45d55586:
            _dict['0e608113-4718-441e-9482-b82d45d55586'] = self.var_0e608113_4718_441e_9482_b82d45d55586.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b06ee9a4_21ac_446e_b16f_9ee6703c52f2
        if self.b06ee9a4_21ac_446e_b16f_9ee6703c52f2:
            _dict['b06ee9a4-21ac-446e-b16f-9ee6703c52f2'] = self.b06ee9a4_21ac_446e_b16f_9ee6703c52f2.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c52030ba_0a5d_48bf_8956_396a28e6203b
        if self.c52030ba_0a5d_48bf_8956_396a28e6203b:
            _dict['c52030ba-0a5d-48bf-8956-396a28e6203b'] = self.c52030ba_0a5d_48bf_8956_396a28e6203b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_93616c1c_6556_4f8d_9446_aa25ddb024fd
        if self.var_93616c1c_6556_4f8d_9446_aa25ddb024fd:
            _dict['93616c1c-6556-4f8d-9446-aa25ddb024fd'] = self.var_93616c1c_6556_4f8d_9446_aa25ddb024fd.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_73c97b6f_ecbc_46d9_b33a_c76b0193fa24
        if self.var_73c97b6f_ecbc_46d9_b33a_c76b0193fa24:
            _dict['73c97b6f-ecbc-46d9-b33a-c76b0193fa24'] = self.var_73c97b6f_ecbc_46d9_b33a_c76b0193fa24.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_9237e11b_e859_48c7_99d8_37be608b578f
        if self.var_9237e11b_e859_48c7_99d8_37be608b578f:
            _dict['9237e11b-e859-48c7-99d8-37be608b578f'] = self.var_9237e11b_e859_48c7_99d8_37be608b578f.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_41ea4efa_714b_49a0_b7a4_5ea0accb986d
        if self.var_41ea4efa_714b_49a0_b7a4_5ea0accb986d:
            _dict['41ea4efa-714b-49a0-b7a4-5ea0accb986d'] = self.var_41ea4efa_714b_49a0_b7a4_5ea0accb986d.to_dict()
        # override the default output from pydantic by calling `to_dict()` of a614946e_6bd0_4b26_b947_4d18205eda35
        if self.a614946e_6bd0_4b26_b947_4d18205eda35:
            _dict['a614946e-6bd0-4b26-b947-4d18205eda35'] = self.a614946e_6bd0_4b26_b947_4d18205eda35.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_652fb458_3243_44c1_b75a_9dcf0b130c7b
        if self.var_652fb458_3243_44c1_b75a_9dcf0b130c7b:
            _dict['652fb458-3243-44c1-b75a-9dcf0b130c7b'] = self.var_652fb458_3243_44c1_b75a_9dcf0b130c7b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_0063cccd_e3f7_4f83_8a9f_f9f2f2001fa9
        if self.var_0063cccd_e3f7_4f83_8a9f_f9f2f2001fa9:
            _dict['0063cccd-e3f7-4f83-8a9f-f9f2f2001fa9'] = self.var_0063cccd_e3f7_4f83_8a9f_f9f2f2001fa9.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_5340fb08_d545_4c8c_b47a_ecb6bfaa621a
        if self.var_5340fb08_d545_4c8c_b47a_ecb6bfaa621a:
            _dict['5340fb08-d545-4c8c-b47a-ecb6bfaa621a'] = self.var_5340fb08_d545_4c8c_b47a_ecb6bfaa621a.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ed2e8b69_6e67_4202_a1b0_ecfd937d2ddf
        if self.ed2e8b69_6e67_4202_a1b0_ecfd937d2ddf:
            _dict['ed2e8b69-6e67-4202-a1b0-ecfd937d2ddf'] = self.ed2e8b69_6e67_4202_a1b0_ecfd937d2ddf.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_9e93d182_2acf_4856_a916_6e0d81d39cea
        if self.var_9e93d182_2acf_4856_a916_6e0d81d39cea:
            _dict['9e93d182-2acf-4856-a916-6e0d81d39cea'] = self.var_9e93d182_2acf_4856_a916_6e0d81d39cea.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_98d4b310_bd3a_4be3_954e_393580550f8e
        if self.var_98d4b310_bd3a_4be3_954e_393580550f8e:
            _dict['98d4b310-bd3a-4be3-954e-393580550f8e'] = self.var_98d4b310_bd3a_4be3_954e_393580550f8e.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_9dd39bba_3a07_4732_9fba_b304fd0e5a88
        if self.var_9dd39bba_3a07_4732_9fba_b304fd0e5a88:
            _dict['9dd39bba-3a07-4732-9fba-b304fd0e5a88'] = self.var_9dd39bba_3a07_4732_9fba_b304fd0e5a88.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_236b67a6_26aa_4cf7_9c3d_f15e31eef06b
        if self.var_236b67a6_26aa_4cf7_9c3d_f15e31eef06b:
            _dict['236b67a6-26aa-4cf7-9c3d-f15e31eef06b'] = self.var_236b67a6_26aa_4cf7_9c3d_f15e31eef06b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_8a890a58_c2fc_4784_86de_6d34c866bc6d
        if self.var_8a890a58_c2fc_4784_86de_6d34c866bc6d:
            _dict['8a890a58-c2fc-4784-86de-6d34c866bc6d'] = self.var_8a890a58_c2fc_4784_86de_6d34c866bc6d.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fb1210fc_3097_44c9_adfe_b5f65ae80aad
        if self.fb1210fc_3097_44c9_adfe_b5f65ae80aad:
            _dict['fb1210fc-3097-44c9-adfe-b5f65ae80aad'] = self.fb1210fc_3097_44c9_adfe_b5f65ae80aad.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_5453af57_5195_41e1_a89a_815aefafd209
        if self.var_5453af57_5195_41e1_a89a_815aefafd209:
            _dict['5453af57-5195-41e1-a89a-815aefafd209'] = self.var_5453af57_5195_41e1_a89a_815aefafd209.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ffb17b46_e3dc_4eaa_b8fe_611e1ace506d
        if self.ffb17b46_e3dc_4eaa_b8fe_611e1ace506d:
            _dict['ffb17b46-e3dc-4eaa-b8fe-611e1ace506d'] = self.ffb17b46_e3dc_4eaa_b8fe_611e1ace506d.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response4 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "f83cbcd6-5036-4bf9-81df-5e981a715601": UserServiceAndQuery.from_dict(obj["f83cbcd6-5036-4bf9-81df-5e981a715601"]) if obj.get("f83cbcd6-5036-4bf9-81df-5e981a715601") is not None else None,
            "2c71a3b1-ca6e-4083-b890-ce7e1417208c": obj.get("2c71a3b1-ca6e-4083-b890-ce7e1417208c"),
            "d5c89d63-8d40-4cc1-bf55-d80555c47869": obj.get("d5c89d63-8d40-4cc1-bf55-d80555c47869"),
            "c6f1c3a5-af2b-42db-890c-3710b529d4c5": obj.get("c6f1c3a5-af2b-42db-890c-3710b529d4c5"),
            "dfdd898b-6379-4e2f-8c22-5cafcd3d5ef6": UserServiceAuthFactorU2F.from_dict(obj["dfdd898b-6379-4e2f-8c22-5cafcd3d5ef6"]) if obj.get("dfdd898b-6379-4e2f-8c22-5cafcd3d5ef6") is not None else None,
            "4bbfd13b-c962-483f-b46f-2ee3fffec835": UserServiceDisplayNameQuery.from_dict(obj["4bbfd13b-c962-483f-b46f-2ee3fffec835"]) if obj.get("4bbfd13b-c962-483f-b46f-2ee3fffec835") is not None else None,
            "b0c12bff-7b73-4063-9e3a-247d21b6573c": UserServiceEmailQuery.from_dict(obj["b0c12bff-7b73-4063-9e3a-247d21b6573c"]) if obj.get("b0c12bff-7b73-4063-9e3a-247d21b6573c") is not None else None,
            "88ca59f6-a6a7-4734-8fe7-76e79f648e60": UserServiceFirstNameQuery.from_dict(obj["88ca59f6-a6a7-4734-8fe7-76e79f648e60"]) if obj.get("88ca59f6-a6a7-4734-8fe7-76e79f648e60") is not None else None,
            "f110e839-fa11-4c73-aeea-d6660a4723a9": UserServiceHashedPassword.from_dict(obj["f110e839-fa11-4c73-aeea-d6660a4723a9"]) if obj.get("f110e839-fa11-4c73-aeea-d6660a4723a9") is not None else None,
            "ac724ea0-f3ed-4fcb-999b-ee9af910fbe6": UserServiceHumanUser.from_dict(obj["ac724ea0-f3ed-4fcb-999b-ee9af910fbe6"]) if obj.get("ac724ea0-f3ed-4fcb-999b-ee9af910fbe6") is not None else None,
            "a3e3b385-88a5-4472-b687-879df649ca3e": UserServiceIDPIntent.from_dict(obj["a3e3b385-88a5-4472-b687-879df649ca3e"]) if obj.get("a3e3b385-88a5-4472-b687-879df649ca3e") is not None else None,
            "39c2a131-53aa-4334-92a0-ac7338b2ce67": UserServiceIDPLDAPAccessInformation.from_dict(obj["39c2a131-53aa-4334-92a0-ac7338b2ce67"]) if obj.get("39c2a131-53aa-4334-92a0-ac7338b2ce67") is not None else None,
            "b742b05f-e9ca-4dab-a966-28ac2d0da16c": UserServiceIDPOAuthAccessInformation.from_dict(obj["b742b05f-e9ca-4dab-a966-28ac2d0da16c"]) if obj.get("b742b05f-e9ca-4dab-a966-28ac2d0da16c") is not None else None,
            "5098155e-573f-4c48-85fe-4f3c9c588931": UserServiceIDPSAMLAccessInformation.from_dict(obj["5098155e-573f-4c48-85fe-4f3c9c588931"]) if obj.get("5098155e-573f-4c48-85fe-4f3c9c588931") is not None else None,
            "0e608113-4718-441e-9482-b82d45d55586": UserServiceInUserEmailsQuery.from_dict(obj["0e608113-4718-441e-9482-b82d45d55586"]) if obj.get("0e608113-4718-441e-9482-b82d45d55586") is not None else None,
            "b06ee9a4-21ac-446e-b16f-9ee6703c52f2": UserServiceInUserIDQuery.from_dict(obj["b06ee9a4-21ac-446e-b16f-9ee6703c52f2"]) if obj.get("b06ee9a4-21ac-446e-b16f-9ee6703c52f2") is not None else None,
            "c52030ba-0a5d-48bf-8956-396a28e6203b": UserServiceLDAPCredentials.from_dict(obj["c52030ba-0a5d-48bf-8956-396a28e6203b"]) if obj.get("c52030ba-0a5d-48bf-8956-396a28e6203b") is not None else None,
            "93616c1c-6556-4f8d-9446-aa25ddb024fd": UserServiceLastNameQuery.from_dict(obj["93616c1c-6556-4f8d-9446-aa25ddb024fd"]) if obj.get("93616c1c-6556-4f8d-9446-aa25ddb024fd") is not None else None,
            "73c97b6f-ecbc-46d9-b33a-c76b0193fa24": UserServiceLoginNameQuery.from_dict(obj["73c97b6f-ecbc-46d9-b33a-c76b0193fa24"]) if obj.get("73c97b6f-ecbc-46d9-b33a-c76b0193fa24") is not None else None,
            "9237e11b-e859-48c7-99d8-37be608b578f": UserServiceMachineUser.from_dict(obj["9237e11b-e859-48c7-99d8-37be608b578f"]) if obj.get("9237e11b-e859-48c7-99d8-37be608b578f") is not None else None,
            "41ea4efa-714b-49a0-b7a4-5ea0accb986d": UserServiceNickNameQuery.from_dict(obj["41ea4efa-714b-49a0-b7a4-5ea0accb986d"]) if obj.get("41ea4efa-714b-49a0-b7a4-5ea0accb986d") is not None else None,
            "a614946e-6bd0-4b26-b947-4d18205eda35": UserServiceNotQuery.from_dict(obj["a614946e-6bd0-4b26-b947-4d18205eda35"]) if obj.get("a614946e-6bd0-4b26-b947-4d18205eda35") is not None else None,
            "652fb458-3243-44c1-b75a-9dcf0b130c7b": UserServiceOrQuery.from_dict(obj["652fb458-3243-44c1-b75a-9dcf0b130c7b"]) if obj.get("652fb458-3243-44c1-b75a-9dcf0b130c7b") is not None else None,
            "0063cccd-e3f7-4f83-8a9f-f9f2f2001fa9": UserServiceOrganizationIdQuery.from_dict(obj["0063cccd-e3f7-4f83-8a9f-f9f2f2001fa9"]) if obj.get("0063cccd-e3f7-4f83-8a9f-f9f2f2001fa9") is not None else None,
            "5340fb08-d545-4c8c-b47a-ecb6bfaa621a": UserServicePassword.from_dict(obj["5340fb08-d545-4c8c-b47a-ecb6bfaa621a"]) if obj.get("5340fb08-d545-4c8c-b47a-ecb6bfaa621a") is not None else None,
            "ed2e8b69-6e67-4202-a1b0-ecfd937d2ddf": UserServicePhoneQuery.from_dict(obj["ed2e8b69-6e67-4202-a1b0-ecfd937d2ddf"]) if obj.get("ed2e8b69-6e67-4202-a1b0-ecfd937d2ddf") is not None else None,
            "9e93d182-2acf-4856-a916-6e0d81d39cea": UserServiceRedirectURLs.from_dict(obj["9e93d182-2acf-4856-a916-6e0d81d39cea"]) if obj.get("9e93d182-2acf-4856-a916-6e0d81d39cea") is not None else None,
            "1fc91c19-eef2-45c8-8514-6c624f785660": obj.get("1fc91c19-eef2-45c8-8514-6c624f785660"),
            "c13ba8a1-4283-4a8c-9291-126631d1ad41": obj.get("c13ba8a1-4283-4a8c-9291-126631d1ad41"),
            "3e19c972-6f3f-4eb6-8ca2-96cd9f2087ea": obj.get("3e19c972-6f3f-4eb6-8ca2-96cd9f2087ea"),
            "74045de4-94c8-4118-b0a2-e40a23bf4399": obj.get("74045de4-94c8-4118-b0a2-e40a23bf4399"),
            "f2f1dabe-90ec-4e66-bb06-308dda585c74": obj.get("f2f1dabe-90ec-4e66-bb06-308dda585c74"),
            "98d4b310-bd3a-4be3-954e-393580550f8e": UserServiceSendEmailVerificationCode.from_dict(obj["98d4b310-bd3a-4be3-954e-393580550f8e"]) if obj.get("98d4b310-bd3a-4be3-954e-393580550f8e") is not None else None,
            "9dd39bba-3a07-4732-9fba-b304fd0e5a88": UserServiceSendInviteCode.from_dict(obj["9dd39bba-3a07-4732-9fba-b304fd0e5a88"]) if obj.get("9dd39bba-3a07-4732-9fba-b304fd0e5a88") is not None else None,
            "236b67a6-26aa-4cf7-9c3d-f15e31eef06b": UserServiceSendPasskeyRegistrationLink.from_dict(obj["236b67a6-26aa-4cf7-9c3d-f15e31eef06b"]) if obj.get("236b67a6-26aa-4cf7-9c3d-f15e31eef06b") is not None else None,
            "8a890a58-c2fc-4784-86de-6d34c866bc6d": UserServiceSendPasswordResetLink.from_dict(obj["8a890a58-c2fc-4784-86de-6d34c866bc6d"]) if obj.get("8a890a58-c2fc-4784-86de-6d34c866bc6d") is not None else None,
            "80a2ea01-67c9-4c08-a15d-8aa8c5f65814": obj.get("80a2ea01-67c9-4c08-a15d-8aa8c5f65814"),
            "fb1210fc-3097-44c9-adfe-b5f65ae80aad": UserServiceStateQuery.from_dict(obj["fb1210fc-3097-44c9-adfe-b5f65ae80aad"]) if obj.get("fb1210fc-3097-44c9-adfe-b5f65ae80aad") is not None else None,
            "5453af57-5195-41e1-a89a-815aefafd209": UserServiceTypeQuery.from_dict(obj["5453af57-5195-41e1-a89a-815aefafd209"]) if obj.get("5453af57-5195-41e1-a89a-815aefafd209") is not None else None,
            "ffb17b46-e3dc-4eaa-b8fe-611e1ace506d": UserServiceUserNameQuery.from_dict(obj["ffb17b46-e3dc-4eaa-b8fe-611e1ace506d"]) if obj.get("ffb17b46-e3dc-4eaa-b8fe-611e1ace506d") is not None else None
        })
        return _obj


