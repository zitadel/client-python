# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.beta_user_service_and_query import BetaUserServiceAndQuery
from zitadel_client.models.beta_user_service_display_name_query import BetaUserServiceDisplayNameQuery
from zitadel_client.models.beta_user_service_email_query import BetaUserServiceEmailQuery
from zitadel_client.models.beta_user_service_first_name_query import BetaUserServiceFirstNameQuery
from zitadel_client.models.beta_user_service_hashed_password import BetaUserServiceHashedPassword
from zitadel_client.models.beta_user_service_human_user import BetaUserServiceHumanUser
from zitadel_client.models.beta_user_service_idp_intent import BetaUserServiceIDPIntent
from zitadel_client.models.beta_user_service_idpldap_access_information import BetaUserServiceIDPLDAPAccessInformation
from zitadel_client.models.beta_user_service_idpo_auth_access_information import BetaUserServiceIDPOAuthAccessInformation
from zitadel_client.models.beta_user_service_idpsaml_access_information import BetaUserServiceIDPSAMLAccessInformation
from zitadel_client.models.beta_user_service_in_user_emails_query import BetaUserServiceInUserEmailsQuery
from zitadel_client.models.beta_user_service_in_user_id_query import BetaUserServiceInUserIDQuery
from zitadel_client.models.beta_user_service_last_name_query import BetaUserServiceLastNameQuery
from zitadel_client.models.beta_user_service_ldap_credentials import BetaUserServiceLDAPCredentials
from zitadel_client.models.beta_user_service_login_name_query import BetaUserServiceLoginNameQuery
from zitadel_client.models.beta_user_service_machine_user import BetaUserServiceMachineUser
from zitadel_client.models.beta_user_service_nick_name_query import BetaUserServiceNickNameQuery
from zitadel_client.models.beta_user_service_not_query import BetaUserServiceNotQuery
from zitadel_client.models.beta_user_service_or_query import BetaUserServiceOrQuery
from zitadel_client.models.beta_user_service_organization_id_query import BetaUserServiceOrganizationIdQuery
from zitadel_client.models.beta_user_service_password import BetaUserServicePassword
from zitadel_client.models.beta_user_service_phone_query import BetaUserServicePhoneQuery
from zitadel_client.models.beta_user_service_redirect_urls import BetaUserServiceRedirectURLs
from zitadel_client.models.beta_user_service_send_email_verification_code import BetaUserServiceSendEmailVerificationCode
from zitadel_client.models.beta_user_service_send_passkey_registration_link import BetaUserServiceSendPasskeyRegistrationLink
from zitadel_client.models.beta_user_service_send_password_reset_link import BetaUserServiceSendPasswordResetLink
from zitadel_client.models.beta_user_service_state_query import BetaUserServiceStateQuery
from zitadel_client.models.beta_user_service_type_query import BetaUserServiceTypeQuery
from zitadel_client.models.beta_user_service_user_name_query import BetaUserServiceUserNameQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response9(BaseModel):
    """
    NoOp200Response9
    """ # noqa: E501
    var_1cc1438c_f2aa_42e1_9d98_c1567ec8af8c: Optional[BetaUserServiceAndQuery] = Field(default=None, alias="1cc1438c-f2aa-42e1-9d98-c1567ec8af8c")
    b61e6384_2512_4460_bf9f_abac97970816: Optional[BetaUserServiceDisplayNameQuery] = Field(default=None, alias="b61e6384-2512-4460-bf9f-abac97970816")
    b1a44e52_5396_4bc1_a025_4cf775f8e992: Optional[BetaUserServiceEmailQuery] = Field(default=None, alias="b1a44e52-5396-4bc1-a025-4cf775f8e992")
    var_985a7ba6_43bd_451f_a766_2a14943fa1e2: Optional[BetaUserServiceFirstNameQuery] = Field(default=None, alias="985a7ba6-43bd-451f-a766-2a14943fa1e2")
    fa6665bb_6140_4917_b7e8_10013ead5523: Optional[BetaUserServiceHashedPassword] = Field(default=None, alias="fa6665bb-6140-4917-b7e8-10013ead5523")
    var_187dcfaf_5461_4d62_a811_369e9f1cbdd0: Optional[BetaUserServiceHumanUser] = Field(default=None, alias="187dcfaf-5461-4d62-a811-369e9f1cbdd0")
    f606086c_a1f0_4252_aa0e_c9257a1ce09e: Optional[BetaUserServiceIDPIntent] = Field(default=None, alias="f606086c-a1f0-4252-aa0e-c9257a1ce09e")
    var_3a4b39c4_e4e2_4cb2_b76a_8eb63380fb95: Optional[BetaUserServiceIDPLDAPAccessInformation] = Field(default=None, alias="3a4b39c4-e4e2-4cb2-b76a-8eb63380fb95")
    var_22688e84_5af5_4ffd_a6f7_b4fba80e089c: Optional[BetaUserServiceIDPOAuthAccessInformation] = Field(default=None, alias="22688e84-5af5-4ffd-a6f7-b4fba80e089c")
    c36072e3_d049_4926_a9e4_c65d0c5a10dc: Optional[BetaUserServiceIDPSAMLAccessInformation] = Field(default=None, alias="c36072e3-d049-4926-a9e4-c65d0c5a10dc")
    var_1d1dab5e_1bca_4b1e_a135_5908581a0c4b: Optional[BetaUserServiceInUserEmailsQuery] = Field(default=None, alias="1d1dab5e-1bca-4b1e-a135-5908581a0c4b")
    var_2a4415c6_c97a_4a46_b126_c81a69244753: Optional[BetaUserServiceInUserIDQuery] = Field(default=None, alias="2a4415c6-c97a-4a46-b126-c81a69244753")
    e4c28790_5159_44c6_b27e_54f206002e4c: Optional[BetaUserServiceLDAPCredentials] = Field(default=None, alias="e4c28790-5159-44c6-b27e-54f206002e4c")
    c6bec6fe_b6e4_4ecc_aa6d_cc7297bfe62b: Optional[BetaUserServiceLastNameQuery] = Field(default=None, alias="c6bec6fe-b6e4-4ecc-aa6d-cc7297bfe62b")
    e5bc65c9_7231_493d_8470_81a22f081b4f: Optional[BetaUserServiceLoginNameQuery] = Field(default=None, alias="e5bc65c9-7231-493d-8470-81a22f081b4f")
    var_192248a0_7f50_4402_b495_b4a35f7a9ae3: Optional[BetaUserServiceMachineUser] = Field(default=None, alias="192248a0-7f50-4402-b495-b4a35f7a9ae3")
    var_8ef063a8_5bb9_461d_906d_d12528f4b4ed: Optional[BetaUserServiceNickNameQuery] = Field(default=None, alias="8ef063a8-5bb9-461d-906d-d12528f4b4ed")
    var_78bb23de_11f1_4fd5_91bd_f5ccef7641d8: Optional[BetaUserServiceNotQuery] = Field(default=None, alias="78bb23de-11f1-4fd5-91bd-f5ccef7641d8")
    var_43cd5f19_4ff7_47b4_8c2f_5b1ed0e089bf: Optional[BetaUserServiceOrQuery] = Field(default=None, alias="43cd5f19-4ff7-47b4-8c2f-5b1ed0e089bf")
    var_5f781d8a_0bf1_4f52_88fa_f8aaa55ed7b0: Optional[BetaUserServiceOrganizationIdQuery] = Field(default=None, alias="5f781d8a-0bf1-4f52-88fa-f8aaa55ed7b0")
    a9615884_cf80_44bc_961c_855add7d004b: Optional[BetaUserServicePassword] = Field(default=None, alias="a9615884-cf80-44bc-961c-855add7d004b")
    bb2a5426_2230_480b_ad61_4c39036acff9: Optional[BetaUserServicePhoneQuery] = Field(default=None, alias="bb2a5426-2230-480b-ad61-4c39036acff9")
    var_611b753b_21ac_45af_a9ac_e07bb3d66bae: Optional[BetaUserServiceRedirectURLs] = Field(default=None, alias="611b753b-21ac-45af-a9ac-e07bb3d66bae")
    c194615f_8149_4436_a1a0_1e84ed67a1a2: Optional[Dict[str, Any]] = Field(default=None, alias="c194615f-8149-4436-a1a0-1e84ed67a1a2")
    a2996439_e9ff_4c82_9e49_ce4b5176fef4: Optional[Dict[str, Any]] = Field(default=None, alias="a2996439-e9ff-4c82-9e49-ce4b5176fef4")
    var_88d21019_2490_4616_b136_a04242465bbd: Optional[Dict[str, Any]] = Field(default=None, alias="88d21019-2490-4616-b136-a04242465bbd")
    var_04271275_2b99_426b_b14b_a3e7b47707a9: Optional[Dict[str, Any]] = Field(default=None, alias="04271275-2b99-426b-b14b-a3e7b47707a9")
    b88f4644_562f_48a4_9765_3831764db916: Optional[BetaUserServiceSendEmailVerificationCode] = Field(default=None, alias="b88f4644-562f-48a4-9765-3831764db916")
    var_29a84655_a802_4923_8d6a_dd5b422cd504: Optional[BetaUserServiceSendPasskeyRegistrationLink] = Field(default=None, alias="29a84655-a802-4923-8d6a-dd5b422cd504")
    var_2b14cb59_05be_48b8_9614_f8782ba46ab0: Optional[BetaUserServiceSendPasswordResetLink] = Field(default=None, alias="2b14cb59-05be-48b8-9614-f8782ba46ab0")
    var_1261f6c3_53ec_43f4_8bc6_64a251556e1e: Optional[Dict[str, Any]] = Field(default=None, alias="1261f6c3-53ec-43f4-8bc6-64a251556e1e")
    var_6b3cf3a1_1c1e_4f0a_9f6c_71e615eb8a1f: Optional[BetaUserServiceStateQuery] = Field(default=None, alias="6b3cf3a1-1c1e-4f0a-9f6c-71e615eb8a1f")
    var_58330153_8024_414a_a7bf_61669352622c: Optional[BetaUserServiceTypeQuery] = Field(default=None, alias="58330153-8024-414a-a7bf-61669352622c")
    var_6eb37c86_e5dd_4013_af9e_66bd404630be: Optional[BetaUserServiceUserNameQuery] = Field(default=None, alias="6eb37c86-e5dd-4013-af9e-66bd404630be")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response9 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_1cc1438c_f2aa_42e1_9d98_c1567ec8af8c
        if self.var_1cc1438c_f2aa_42e1_9d98_c1567ec8af8c:
            _dict['1cc1438c-f2aa-42e1-9d98-c1567ec8af8c'] = self.var_1cc1438c_f2aa_42e1_9d98_c1567ec8af8c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b61e6384_2512_4460_bf9f_abac97970816
        if self.b61e6384_2512_4460_bf9f_abac97970816:
            _dict['b61e6384-2512-4460-bf9f-abac97970816'] = self.b61e6384_2512_4460_bf9f_abac97970816.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b1a44e52_5396_4bc1_a025_4cf775f8e992
        if self.b1a44e52_5396_4bc1_a025_4cf775f8e992:
            _dict['b1a44e52-5396-4bc1-a025-4cf775f8e992'] = self.b1a44e52_5396_4bc1_a025_4cf775f8e992.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_985a7ba6_43bd_451f_a766_2a14943fa1e2
        if self.var_985a7ba6_43bd_451f_a766_2a14943fa1e2:
            _dict['985a7ba6-43bd-451f-a766-2a14943fa1e2'] = self.var_985a7ba6_43bd_451f_a766_2a14943fa1e2.to_dict()
        # override the default output from pydantic by calling `to_dict()` of fa6665bb_6140_4917_b7e8_10013ead5523
        if self.fa6665bb_6140_4917_b7e8_10013ead5523:
            _dict['fa6665bb-6140-4917-b7e8-10013ead5523'] = self.fa6665bb_6140_4917_b7e8_10013ead5523.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_187dcfaf_5461_4d62_a811_369e9f1cbdd0
        if self.var_187dcfaf_5461_4d62_a811_369e9f1cbdd0:
            _dict['187dcfaf-5461-4d62-a811-369e9f1cbdd0'] = self.var_187dcfaf_5461_4d62_a811_369e9f1cbdd0.to_dict()
        # override the default output from pydantic by calling `to_dict()` of f606086c_a1f0_4252_aa0e_c9257a1ce09e
        if self.f606086c_a1f0_4252_aa0e_c9257a1ce09e:
            _dict['f606086c-a1f0-4252-aa0e-c9257a1ce09e'] = self.f606086c_a1f0_4252_aa0e_c9257a1ce09e.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_3a4b39c4_e4e2_4cb2_b76a_8eb63380fb95
        if self.var_3a4b39c4_e4e2_4cb2_b76a_8eb63380fb95:
            _dict['3a4b39c4-e4e2-4cb2-b76a-8eb63380fb95'] = self.var_3a4b39c4_e4e2_4cb2_b76a_8eb63380fb95.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_22688e84_5af5_4ffd_a6f7_b4fba80e089c
        if self.var_22688e84_5af5_4ffd_a6f7_b4fba80e089c:
            _dict['22688e84-5af5-4ffd-a6f7-b4fba80e089c'] = self.var_22688e84_5af5_4ffd_a6f7_b4fba80e089c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c36072e3_d049_4926_a9e4_c65d0c5a10dc
        if self.c36072e3_d049_4926_a9e4_c65d0c5a10dc:
            _dict['c36072e3-d049-4926-a9e4-c65d0c5a10dc'] = self.c36072e3_d049_4926_a9e4_c65d0c5a10dc.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_1d1dab5e_1bca_4b1e_a135_5908581a0c4b
        if self.var_1d1dab5e_1bca_4b1e_a135_5908581a0c4b:
            _dict['1d1dab5e-1bca-4b1e-a135-5908581a0c4b'] = self.var_1d1dab5e_1bca_4b1e_a135_5908581a0c4b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_2a4415c6_c97a_4a46_b126_c81a69244753
        if self.var_2a4415c6_c97a_4a46_b126_c81a69244753:
            _dict['2a4415c6-c97a-4a46-b126-c81a69244753'] = self.var_2a4415c6_c97a_4a46_b126_c81a69244753.to_dict()
        # override the default output from pydantic by calling `to_dict()` of e4c28790_5159_44c6_b27e_54f206002e4c
        if self.e4c28790_5159_44c6_b27e_54f206002e4c:
            _dict['e4c28790-5159-44c6-b27e-54f206002e4c'] = self.e4c28790_5159_44c6_b27e_54f206002e4c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c6bec6fe_b6e4_4ecc_aa6d_cc7297bfe62b
        if self.c6bec6fe_b6e4_4ecc_aa6d_cc7297bfe62b:
            _dict['c6bec6fe-b6e4-4ecc-aa6d-cc7297bfe62b'] = self.c6bec6fe_b6e4_4ecc_aa6d_cc7297bfe62b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of e5bc65c9_7231_493d_8470_81a22f081b4f
        if self.e5bc65c9_7231_493d_8470_81a22f081b4f:
            _dict['e5bc65c9-7231-493d-8470-81a22f081b4f'] = self.e5bc65c9_7231_493d_8470_81a22f081b4f.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_192248a0_7f50_4402_b495_b4a35f7a9ae3
        if self.var_192248a0_7f50_4402_b495_b4a35f7a9ae3:
            _dict['192248a0-7f50-4402-b495-b4a35f7a9ae3'] = self.var_192248a0_7f50_4402_b495_b4a35f7a9ae3.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_8ef063a8_5bb9_461d_906d_d12528f4b4ed
        if self.var_8ef063a8_5bb9_461d_906d_d12528f4b4ed:
            _dict['8ef063a8-5bb9-461d-906d-d12528f4b4ed'] = self.var_8ef063a8_5bb9_461d_906d_d12528f4b4ed.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_78bb23de_11f1_4fd5_91bd_f5ccef7641d8
        if self.var_78bb23de_11f1_4fd5_91bd_f5ccef7641d8:
            _dict['78bb23de-11f1-4fd5-91bd-f5ccef7641d8'] = self.var_78bb23de_11f1_4fd5_91bd_f5ccef7641d8.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_43cd5f19_4ff7_47b4_8c2f_5b1ed0e089bf
        if self.var_43cd5f19_4ff7_47b4_8c2f_5b1ed0e089bf:
            _dict['43cd5f19-4ff7-47b4-8c2f-5b1ed0e089bf'] = self.var_43cd5f19_4ff7_47b4_8c2f_5b1ed0e089bf.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_5f781d8a_0bf1_4f52_88fa_f8aaa55ed7b0
        if self.var_5f781d8a_0bf1_4f52_88fa_f8aaa55ed7b0:
            _dict['5f781d8a-0bf1-4f52-88fa-f8aaa55ed7b0'] = self.var_5f781d8a_0bf1_4f52_88fa_f8aaa55ed7b0.to_dict()
        # override the default output from pydantic by calling `to_dict()` of a9615884_cf80_44bc_961c_855add7d004b
        if self.a9615884_cf80_44bc_961c_855add7d004b:
            _dict['a9615884-cf80-44bc-961c-855add7d004b'] = self.a9615884_cf80_44bc_961c_855add7d004b.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bb2a5426_2230_480b_ad61_4c39036acff9
        if self.bb2a5426_2230_480b_ad61_4c39036acff9:
            _dict['bb2a5426-2230-480b-ad61-4c39036acff9'] = self.bb2a5426_2230_480b_ad61_4c39036acff9.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_611b753b_21ac_45af_a9ac_e07bb3d66bae
        if self.var_611b753b_21ac_45af_a9ac_e07bb3d66bae:
            _dict['611b753b-21ac-45af-a9ac-e07bb3d66bae'] = self.var_611b753b_21ac_45af_a9ac_e07bb3d66bae.to_dict()
        # override the default output from pydantic by calling `to_dict()` of b88f4644_562f_48a4_9765_3831764db916
        if self.b88f4644_562f_48a4_9765_3831764db916:
            _dict['b88f4644-562f-48a4-9765-3831764db916'] = self.b88f4644_562f_48a4_9765_3831764db916.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_29a84655_a802_4923_8d6a_dd5b422cd504
        if self.var_29a84655_a802_4923_8d6a_dd5b422cd504:
            _dict['29a84655-a802-4923-8d6a-dd5b422cd504'] = self.var_29a84655_a802_4923_8d6a_dd5b422cd504.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_2b14cb59_05be_48b8_9614_f8782ba46ab0
        if self.var_2b14cb59_05be_48b8_9614_f8782ba46ab0:
            _dict['2b14cb59-05be-48b8-9614-f8782ba46ab0'] = self.var_2b14cb59_05be_48b8_9614_f8782ba46ab0.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_6b3cf3a1_1c1e_4f0a_9f6c_71e615eb8a1f
        if self.var_6b3cf3a1_1c1e_4f0a_9f6c_71e615eb8a1f:
            _dict['6b3cf3a1-1c1e-4f0a-9f6c-71e615eb8a1f'] = self.var_6b3cf3a1_1c1e_4f0a_9f6c_71e615eb8a1f.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_58330153_8024_414a_a7bf_61669352622c
        if self.var_58330153_8024_414a_a7bf_61669352622c:
            _dict['58330153-8024-414a-a7bf-61669352622c'] = self.var_58330153_8024_414a_a7bf_61669352622c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_6eb37c86_e5dd_4013_af9e_66bd404630be
        if self.var_6eb37c86_e5dd_4013_af9e_66bd404630be:
            _dict['6eb37c86-e5dd-4013-af9e-66bd404630be'] = self.var_6eb37c86_e5dd_4013_af9e_66bd404630be.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response9 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "1cc1438c-f2aa-42e1-9d98-c1567ec8af8c": BetaUserServiceAndQuery.from_dict(obj["1cc1438c-f2aa-42e1-9d98-c1567ec8af8c"]) if obj.get("1cc1438c-f2aa-42e1-9d98-c1567ec8af8c") is not None else None,
            "b61e6384-2512-4460-bf9f-abac97970816": BetaUserServiceDisplayNameQuery.from_dict(obj["b61e6384-2512-4460-bf9f-abac97970816"]) if obj.get("b61e6384-2512-4460-bf9f-abac97970816") is not None else None,
            "b1a44e52-5396-4bc1-a025-4cf775f8e992": BetaUserServiceEmailQuery.from_dict(obj["b1a44e52-5396-4bc1-a025-4cf775f8e992"]) if obj.get("b1a44e52-5396-4bc1-a025-4cf775f8e992") is not None else None,
            "985a7ba6-43bd-451f-a766-2a14943fa1e2": BetaUserServiceFirstNameQuery.from_dict(obj["985a7ba6-43bd-451f-a766-2a14943fa1e2"]) if obj.get("985a7ba6-43bd-451f-a766-2a14943fa1e2") is not None else None,
            "fa6665bb-6140-4917-b7e8-10013ead5523": BetaUserServiceHashedPassword.from_dict(obj["fa6665bb-6140-4917-b7e8-10013ead5523"]) if obj.get("fa6665bb-6140-4917-b7e8-10013ead5523") is not None else None,
            "187dcfaf-5461-4d62-a811-369e9f1cbdd0": BetaUserServiceHumanUser.from_dict(obj["187dcfaf-5461-4d62-a811-369e9f1cbdd0"]) if obj.get("187dcfaf-5461-4d62-a811-369e9f1cbdd0") is not None else None,
            "f606086c-a1f0-4252-aa0e-c9257a1ce09e": BetaUserServiceIDPIntent.from_dict(obj["f606086c-a1f0-4252-aa0e-c9257a1ce09e"]) if obj.get("f606086c-a1f0-4252-aa0e-c9257a1ce09e") is not None else None,
            "3a4b39c4-e4e2-4cb2-b76a-8eb63380fb95": BetaUserServiceIDPLDAPAccessInformation.from_dict(obj["3a4b39c4-e4e2-4cb2-b76a-8eb63380fb95"]) if obj.get("3a4b39c4-e4e2-4cb2-b76a-8eb63380fb95") is not None else None,
            "22688e84-5af5-4ffd-a6f7-b4fba80e089c": BetaUserServiceIDPOAuthAccessInformation.from_dict(obj["22688e84-5af5-4ffd-a6f7-b4fba80e089c"]) if obj.get("22688e84-5af5-4ffd-a6f7-b4fba80e089c") is not None else None,
            "c36072e3-d049-4926-a9e4-c65d0c5a10dc": BetaUserServiceIDPSAMLAccessInformation.from_dict(obj["c36072e3-d049-4926-a9e4-c65d0c5a10dc"]) if obj.get("c36072e3-d049-4926-a9e4-c65d0c5a10dc") is not None else None,
            "1d1dab5e-1bca-4b1e-a135-5908581a0c4b": BetaUserServiceInUserEmailsQuery.from_dict(obj["1d1dab5e-1bca-4b1e-a135-5908581a0c4b"]) if obj.get("1d1dab5e-1bca-4b1e-a135-5908581a0c4b") is not None else None,
            "2a4415c6-c97a-4a46-b126-c81a69244753": BetaUserServiceInUserIDQuery.from_dict(obj["2a4415c6-c97a-4a46-b126-c81a69244753"]) if obj.get("2a4415c6-c97a-4a46-b126-c81a69244753") is not None else None,
            "e4c28790-5159-44c6-b27e-54f206002e4c": BetaUserServiceLDAPCredentials.from_dict(obj["e4c28790-5159-44c6-b27e-54f206002e4c"]) if obj.get("e4c28790-5159-44c6-b27e-54f206002e4c") is not None else None,
            "c6bec6fe-b6e4-4ecc-aa6d-cc7297bfe62b": BetaUserServiceLastNameQuery.from_dict(obj["c6bec6fe-b6e4-4ecc-aa6d-cc7297bfe62b"]) if obj.get("c6bec6fe-b6e4-4ecc-aa6d-cc7297bfe62b") is not None else None,
            "e5bc65c9-7231-493d-8470-81a22f081b4f": BetaUserServiceLoginNameQuery.from_dict(obj["e5bc65c9-7231-493d-8470-81a22f081b4f"]) if obj.get("e5bc65c9-7231-493d-8470-81a22f081b4f") is not None else None,
            "192248a0-7f50-4402-b495-b4a35f7a9ae3": BetaUserServiceMachineUser.from_dict(obj["192248a0-7f50-4402-b495-b4a35f7a9ae3"]) if obj.get("192248a0-7f50-4402-b495-b4a35f7a9ae3") is not None else None,
            "8ef063a8-5bb9-461d-906d-d12528f4b4ed": BetaUserServiceNickNameQuery.from_dict(obj["8ef063a8-5bb9-461d-906d-d12528f4b4ed"]) if obj.get("8ef063a8-5bb9-461d-906d-d12528f4b4ed") is not None else None,
            "78bb23de-11f1-4fd5-91bd-f5ccef7641d8": BetaUserServiceNotQuery.from_dict(obj["78bb23de-11f1-4fd5-91bd-f5ccef7641d8"]) if obj.get("78bb23de-11f1-4fd5-91bd-f5ccef7641d8") is not None else None,
            "43cd5f19-4ff7-47b4-8c2f-5b1ed0e089bf": BetaUserServiceOrQuery.from_dict(obj["43cd5f19-4ff7-47b4-8c2f-5b1ed0e089bf"]) if obj.get("43cd5f19-4ff7-47b4-8c2f-5b1ed0e089bf") is not None else None,
            "5f781d8a-0bf1-4f52-88fa-f8aaa55ed7b0": BetaUserServiceOrganizationIdQuery.from_dict(obj["5f781d8a-0bf1-4f52-88fa-f8aaa55ed7b0"]) if obj.get("5f781d8a-0bf1-4f52-88fa-f8aaa55ed7b0") is not None else None,
            "a9615884-cf80-44bc-961c-855add7d004b": BetaUserServicePassword.from_dict(obj["a9615884-cf80-44bc-961c-855add7d004b"]) if obj.get("a9615884-cf80-44bc-961c-855add7d004b") is not None else None,
            "bb2a5426-2230-480b-ad61-4c39036acff9": BetaUserServicePhoneQuery.from_dict(obj["bb2a5426-2230-480b-ad61-4c39036acff9"]) if obj.get("bb2a5426-2230-480b-ad61-4c39036acff9") is not None else None,
            "611b753b-21ac-45af-a9ac-e07bb3d66bae": BetaUserServiceRedirectURLs.from_dict(obj["611b753b-21ac-45af-a9ac-e07bb3d66bae"]) if obj.get("611b753b-21ac-45af-a9ac-e07bb3d66bae") is not None else None,
            "c194615f-8149-4436-a1a0-1e84ed67a1a2": obj.get("c194615f-8149-4436-a1a0-1e84ed67a1a2"),
            "a2996439-e9ff-4c82-9e49-ce4b5176fef4": obj.get("a2996439-e9ff-4c82-9e49-ce4b5176fef4"),
            "88d21019-2490-4616-b136-a04242465bbd": obj.get("88d21019-2490-4616-b136-a04242465bbd"),
            "04271275-2b99-426b-b14b-a3e7b47707a9": obj.get("04271275-2b99-426b-b14b-a3e7b47707a9"),
            "b88f4644-562f-48a4-9765-3831764db916": BetaUserServiceSendEmailVerificationCode.from_dict(obj["b88f4644-562f-48a4-9765-3831764db916"]) if obj.get("b88f4644-562f-48a4-9765-3831764db916") is not None else None,
            "29a84655-a802-4923-8d6a-dd5b422cd504": BetaUserServiceSendPasskeyRegistrationLink.from_dict(obj["29a84655-a802-4923-8d6a-dd5b422cd504"]) if obj.get("29a84655-a802-4923-8d6a-dd5b422cd504") is not None else None,
            "2b14cb59-05be-48b8-9614-f8782ba46ab0": BetaUserServiceSendPasswordResetLink.from_dict(obj["2b14cb59-05be-48b8-9614-f8782ba46ab0"]) if obj.get("2b14cb59-05be-48b8-9614-f8782ba46ab0") is not None else None,
            "1261f6c3-53ec-43f4-8bc6-64a251556e1e": obj.get("1261f6c3-53ec-43f4-8bc6-64a251556e1e"),
            "6b3cf3a1-1c1e-4f0a-9f6c-71e615eb8a1f": BetaUserServiceStateQuery.from_dict(obj["6b3cf3a1-1c1e-4f0a-9f6c-71e615eb8a1f"]) if obj.get("6b3cf3a1-1c1e-4f0a-9f6c-71e615eb8a1f") is not None else None,
            "58330153-8024-414a-a7bf-61669352622c": BetaUserServiceTypeQuery.from_dict(obj["58330153-8024-414a-a7bf-61669352622c"]) if obj.get("58330153-8024-414a-a7bf-61669352622c") is not None else None,
            "6eb37c86-e5dd-4013-af9e-66bd404630be": BetaUserServiceUserNameQuery.from_dict(obj["6eb37c86-e5dd-4013-af9e-66bd404630be"]) if obj.get("6eb37c86-e5dd-4013-af9e-66bd404630be") is not None else None
        })
        return _obj


