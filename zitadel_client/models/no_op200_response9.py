# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.beta_action_service_event_execution import BetaActionServiceEventExecution
from zitadel_client.models.beta_action_service_execution_type_filter import BetaActionServiceExecutionTypeFilter
from zitadel_client.models.beta_action_service_function_execution import BetaActionServiceFunctionExecution
from zitadel_client.models.beta_action_service_in_conditions_filter import BetaActionServiceInConditionsFilter
from zitadel_client.models.beta_action_service_in_target_ids_filter import BetaActionServiceInTargetIDsFilter
from zitadel_client.models.beta_action_service_request_execution import BetaActionServiceRequestExecution
from zitadel_client.models.beta_action_service_response_execution import BetaActionServiceResponseExecution
from zitadel_client.models.beta_action_service_target_filter import BetaActionServiceTargetFilter
from zitadel_client.models.beta_action_service_target_name_filter import BetaActionServiceTargetNameFilter
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response9(BaseModel):
    """
    NoOp200Response9
    """ # noqa: E501
    b0d436b0_d179_4e3b_a3e7_268f8f84af82: Optional[BetaActionServiceEventExecution] = Field(default=None, alias="b0d436b0-d179-4e3b-a3e7-268f8f84af82")
    d6008058_7bac_4327_bb0f_c075fc37624f: Optional[BetaActionServiceExecutionTypeFilter] = Field(default=None, alias="d6008058-7bac-4327-bb0f-c075fc37624f")
    var_574f6ae6_b58a_4fbd_89b8_3b33465722dd: Optional[BetaActionServiceFunctionExecution] = Field(default=None, alias="574f6ae6-b58a-4fbd-89b8-3b33465722dd")
    f1f0b4ab_e9a6_499e_826d_5982fe94906c: Optional[BetaActionServiceInConditionsFilter] = Field(default=None, alias="f1f0b4ab-e9a6-499e-826d-5982fe94906c")
    var_988705d3_f78b_4d0d_a9e5_40a4e208e4bd: Optional[BetaActionServiceInTargetIDsFilter] = Field(default=None, alias="988705d3-f78b-4d0d-a9e5-40a4e208e4bd")
    ebe860cb_b591_401d_aeb8_aca2c3fe247f: Optional[BetaActionServiceRequestExecution] = Field(default=None, alias="ebe860cb-b591-401d-aeb8-aca2c3fe247f")
    a77b2e09_3f3b_48e9_96f8_e503fc13f5c6: Optional[BetaActionServiceResponseExecution] = Field(default=None, alias="a77b2e09-3f3b-48e9-96f8-e503fc13f5c6")
    var_9ab9680c_6341_428a_8525_a24ad7de5cd5: Optional[BetaActionServiceTargetFilter] = Field(default=None, alias="9ab9680c-6341-428a-8525-a24ad7de5cd5")
    var_42212585_852b_4915_a000_568569c7e406: Optional[BetaActionServiceTargetNameFilter] = Field(default=None, alias="42212585-852b-4915-a000-568569c7e406")
    __properties: ClassVar[List[str]] = ["b0d436b0-d179-4e3b-a3e7-268f8f84af82", "d6008058-7bac-4327-bb0f-c075fc37624f", "574f6ae6-b58a-4fbd-89b8-3b33465722dd", "f1f0b4ab-e9a6-499e-826d-5982fe94906c", "988705d3-f78b-4d0d-a9e5-40a4e208e4bd", "ebe860cb-b591-401d-aeb8-aca2c3fe247f", "a77b2e09-3f3b-48e9-96f8-e503fc13f5c6", "9ab9680c-6341-428a-8525-a24ad7de5cd5", "42212585-852b-4915-a000-568569c7e406"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response9 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of b0d436b0_d179_4e3b_a3e7_268f8f84af82
        if self.b0d436b0_d179_4e3b_a3e7_268f8f84af82:
            _dict['b0d436b0-d179-4e3b-a3e7-268f8f84af82'] = self.b0d436b0_d179_4e3b_a3e7_268f8f84af82.to_dict()
        # override the default output from pydantic by calling `to_dict()` of d6008058_7bac_4327_bb0f_c075fc37624f
        if self.d6008058_7bac_4327_bb0f_c075fc37624f:
            _dict['d6008058-7bac-4327-bb0f-c075fc37624f'] = self.d6008058_7bac_4327_bb0f_c075fc37624f.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_574f6ae6_b58a_4fbd_89b8_3b33465722dd
        if self.var_574f6ae6_b58a_4fbd_89b8_3b33465722dd:
            _dict['574f6ae6-b58a-4fbd-89b8-3b33465722dd'] = self.var_574f6ae6_b58a_4fbd_89b8_3b33465722dd.to_dict()
        # override the default output from pydantic by calling `to_dict()` of f1f0b4ab_e9a6_499e_826d_5982fe94906c
        if self.f1f0b4ab_e9a6_499e_826d_5982fe94906c:
            _dict['f1f0b4ab-e9a6-499e-826d-5982fe94906c'] = self.f1f0b4ab_e9a6_499e_826d_5982fe94906c.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_988705d3_f78b_4d0d_a9e5_40a4e208e4bd
        if self.var_988705d3_f78b_4d0d_a9e5_40a4e208e4bd:
            _dict['988705d3-f78b-4d0d-a9e5-40a4e208e4bd'] = self.var_988705d3_f78b_4d0d_a9e5_40a4e208e4bd.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ebe860cb_b591_401d_aeb8_aca2c3fe247f
        if self.ebe860cb_b591_401d_aeb8_aca2c3fe247f:
            _dict['ebe860cb-b591-401d-aeb8-aca2c3fe247f'] = self.ebe860cb_b591_401d_aeb8_aca2c3fe247f.to_dict()
        # override the default output from pydantic by calling `to_dict()` of a77b2e09_3f3b_48e9_96f8_e503fc13f5c6
        if self.a77b2e09_3f3b_48e9_96f8_e503fc13f5c6:
            _dict['a77b2e09-3f3b-48e9-96f8-e503fc13f5c6'] = self.a77b2e09_3f3b_48e9_96f8_e503fc13f5c6.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_9ab9680c_6341_428a_8525_a24ad7de5cd5
        if self.var_9ab9680c_6341_428a_8525_a24ad7de5cd5:
            _dict['9ab9680c-6341-428a-8525-a24ad7de5cd5'] = self.var_9ab9680c_6341_428a_8525_a24ad7de5cd5.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_42212585_852b_4915_a000_568569c7e406
        if self.var_42212585_852b_4915_a000_568569c7e406:
            _dict['42212585-852b-4915-a000-568569c7e406'] = self.var_42212585_852b_4915_a000_568569c7e406.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response9 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "b0d436b0-d179-4e3b-a3e7-268f8f84af82": BetaActionServiceEventExecution.from_dict(obj["b0d436b0-d179-4e3b-a3e7-268f8f84af82"]) if obj.get("b0d436b0-d179-4e3b-a3e7-268f8f84af82") is not None else None,
            "d6008058-7bac-4327-bb0f-c075fc37624f": BetaActionServiceExecutionTypeFilter.from_dict(obj["d6008058-7bac-4327-bb0f-c075fc37624f"]) if obj.get("d6008058-7bac-4327-bb0f-c075fc37624f") is not None else None,
            "574f6ae6-b58a-4fbd-89b8-3b33465722dd": BetaActionServiceFunctionExecution.from_dict(obj["574f6ae6-b58a-4fbd-89b8-3b33465722dd"]) if obj.get("574f6ae6-b58a-4fbd-89b8-3b33465722dd") is not None else None,
            "f1f0b4ab-e9a6-499e-826d-5982fe94906c": BetaActionServiceInConditionsFilter.from_dict(obj["f1f0b4ab-e9a6-499e-826d-5982fe94906c"]) if obj.get("f1f0b4ab-e9a6-499e-826d-5982fe94906c") is not None else None,
            "988705d3-f78b-4d0d-a9e5-40a4e208e4bd": BetaActionServiceInTargetIDsFilter.from_dict(obj["988705d3-f78b-4d0d-a9e5-40a4e208e4bd"]) if obj.get("988705d3-f78b-4d0d-a9e5-40a4e208e4bd") is not None else None,
            "ebe860cb-b591-401d-aeb8-aca2c3fe247f": BetaActionServiceRequestExecution.from_dict(obj["ebe860cb-b591-401d-aeb8-aca2c3fe247f"]) if obj.get("ebe860cb-b591-401d-aeb8-aca2c3fe247f") is not None else None,
            "a77b2e09-3f3b-48e9-96f8-e503fc13f5c6": BetaActionServiceResponseExecution.from_dict(obj["a77b2e09-3f3b-48e9-96f8-e503fc13f5c6"]) if obj.get("a77b2e09-3f3b-48e9-96f8-e503fc13f5c6") is not None else None,
            "9ab9680c-6341-428a-8525-a24ad7de5cd5": BetaActionServiceTargetFilter.from_dict(obj["9ab9680c-6341-428a-8525-a24ad7de5cd5"]) if obj.get("9ab9680c-6341-428a-8525-a24ad7de5cd5") is not None else None,
            "42212585-852b-4915-a000-568569c7e406": BetaActionServiceTargetNameFilter.from_dict(obj["42212585-852b-4915-a000-568569c7e406"]) if obj.get("42212585-852b-4915-a000-568569c7e406") is not None else None
        })
        return _obj


