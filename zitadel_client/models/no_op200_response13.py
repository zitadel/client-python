# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.beta_instance_service_domain_generated_query import BetaInstanceServiceDomainGeneratedQuery
from zitadel_client.models.beta_instance_service_domain_primary_query import BetaInstanceServiceDomainPrimaryQuery
from zitadel_client.models.beta_instance_service_domain_query import BetaInstanceServiceDomainQuery
from zitadel_client.models.beta_instance_service_domains_query import BetaInstanceServiceDomainsQuery
from zitadel_client.models.beta_instance_service_ids_query import BetaInstanceServiceIdsQuery
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response13(BaseModel):
    """
    NoOp200Response13
    """ # noqa: E501
    var_1d389ad7_7073_465a_ab7d_7abbd9639aca: Optional[BetaInstanceServiceDomainGeneratedQuery] = Field(default=None, alias="1d389ad7-7073-465a-ab7d-7abbd9639aca")
    var_9ad274dd_8a5b_4da8_853f_e37eb4ec1515: Optional[BetaInstanceServiceDomainPrimaryQuery] = Field(default=None, alias="9ad274dd-8a5b-4da8-853f-e37eb4ec1515")
    var_9fa2e511_d0c6_4983_96ab_d118445f6c5e: Optional[BetaInstanceServiceDomainQuery] = Field(default=None, alias="9fa2e511-d0c6-4983-96ab-d118445f6c5e")
    var_1c5d2749_3440_4063_873e_50f195e0fff4: Optional[BetaInstanceServiceDomainsQuery] = Field(default=None, alias="1c5d2749-3440-4063-873e-50f195e0fff4")
    var_6646ad63_8a23_4f08_8d20_7e4b9afaaeed: Optional[BetaInstanceServiceIdsQuery] = Field(default=None, alias="6646ad63-8a23-4f08-8d20-7e4b9afaaeed")
    __properties: ClassVar[List[str]] = ["1d389ad7-7073-465a-ab7d-7abbd9639aca", "9ad274dd-8a5b-4da8-853f-e37eb4ec1515", "9fa2e511-d0c6-4983-96ab-d118445f6c5e", "1c5d2749-3440-4063-873e-50f195e0fff4", "6646ad63-8a23-4f08-8d20-7e4b9afaaeed"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response13 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_1d389ad7_7073_465a_ab7d_7abbd9639aca
        if self.var_1d389ad7_7073_465a_ab7d_7abbd9639aca:
            _dict['1d389ad7-7073-465a-ab7d-7abbd9639aca'] = self.var_1d389ad7_7073_465a_ab7d_7abbd9639aca.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_9ad274dd_8a5b_4da8_853f_e37eb4ec1515
        if self.var_9ad274dd_8a5b_4da8_853f_e37eb4ec1515:
            _dict['9ad274dd-8a5b-4da8-853f-e37eb4ec1515'] = self.var_9ad274dd_8a5b_4da8_853f_e37eb4ec1515.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_9fa2e511_d0c6_4983_96ab_d118445f6c5e
        if self.var_9fa2e511_d0c6_4983_96ab_d118445f6c5e:
            _dict['9fa2e511-d0c6-4983-96ab-d118445f6c5e'] = self.var_9fa2e511_d0c6_4983_96ab_d118445f6c5e.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_1c5d2749_3440_4063_873e_50f195e0fff4
        if self.var_1c5d2749_3440_4063_873e_50f195e0fff4:
            _dict['1c5d2749-3440-4063-873e-50f195e0fff4'] = self.var_1c5d2749_3440_4063_873e_50f195e0fff4.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_6646ad63_8a23_4f08_8d20_7e4b9afaaeed
        if self.var_6646ad63_8a23_4f08_8d20_7e4b9afaaeed:
            _dict['6646ad63-8a23-4f08-8d20-7e4b9afaaeed'] = self.var_6646ad63_8a23_4f08_8d20_7e4b9afaaeed.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response13 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "1d389ad7-7073-465a-ab7d-7abbd9639aca": BetaInstanceServiceDomainGeneratedQuery.from_dict(obj["1d389ad7-7073-465a-ab7d-7abbd9639aca"]) if obj.get("1d389ad7-7073-465a-ab7d-7abbd9639aca") is not None else None,
            "9ad274dd-8a5b-4da8-853f-e37eb4ec1515": BetaInstanceServiceDomainPrimaryQuery.from_dict(obj["9ad274dd-8a5b-4da8-853f-e37eb4ec1515"]) if obj.get("9ad274dd-8a5b-4da8-853f-e37eb4ec1515") is not None else None,
            "9fa2e511-d0c6-4983-96ab-d118445f6c5e": BetaInstanceServiceDomainQuery.from_dict(obj["9fa2e511-d0c6-4983-96ab-d118445f6c5e"]) if obj.get("9fa2e511-d0c6-4983-96ab-d118445f6c5e") is not None else None,
            "1c5d2749-3440-4063-873e-50f195e0fff4": BetaInstanceServiceDomainsQuery.from_dict(obj["1c5d2749-3440-4063-873e-50f195e0fff4"]) if obj.get("1c5d2749-3440-4063-873e-50f195e0fff4") is not None else None,
            "6646ad63-8a23-4f08-8d20-7e4b9afaaeed": BetaInstanceServiceIdsQuery.from_dict(obj["6646ad63-8a23-4f08-8d20-7e4b9afaaeed"]) if obj.get("6646ad63-8a23-4f08-8d20-7e4b9afaaeed") is not None else None
        })
        return _obj


