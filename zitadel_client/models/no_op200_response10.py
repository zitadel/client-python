# coding: utf-8

"""
    Zitadel SDK

    The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, Optional
from zitadel_client.models.beta_organization_service_add_human_user_request import BetaOrganizationServiceAddHumanUserRequest
from zitadel_client.models.beta_organization_service_hashed_password import BetaOrganizationServiceHashedPassword
from zitadel_client.models.beta_organization_service_password import BetaOrganizationServicePassword
from zitadel_client.models.beta_organization_service_send_email_verification_code import BetaOrganizationServiceSendEmailVerificationCode
from typing import Optional, Set
from typing_extensions import Self

class NoOp200Response10(BaseModel):
    """
    NoOp200Response10
    """ # noqa: E501
    var_7761063e_fa20_469e_ad24_10f3934a11cb: Optional[BetaOrganizationServiceAddHumanUserRequest] = Field(default=None, alias="7761063e-fa20-469e-ad24-10f3934a11cb")
    c6609ff7_89f6_4179_b151_722f9e4ea275: Optional[BetaOrganizationServiceHashedPassword] = Field(default=None, alias="c6609ff7-89f6-4179-b151-722f9e4ea275")
    var_5a007200_44ea_4e1f_a598_456ec4ca580d: Optional[BetaOrganizationServicePassword] = Field(default=None, alias="5a007200-44ea-4e1f-a598-456ec4ca580d")
    var_64e2cfb6_30a2_45f7_ab29_e435e8c1a540: Optional[Dict[str, Any]] = Field(default=None, alias="64e2cfb6-30a2-45f7-ab29-e435e8c1a540")
    var_6fc729ff_3ce4_4402_9f55_1964c189c27f: Optional[Dict[str, Any]] = Field(default=None, alias="6fc729ff-3ce4-4402-9f55-1964c189c27f")
    c16703c5_43ff_41b2_8117_cbdb740f4669: Optional[BetaOrganizationServiceSendEmailVerificationCode] = Field(default=None, alias="c16703c5-43ff-41b2-8117-cbdb740f4669")
    var_3d08c772_dcf7_42b2_a1ed_520618ab6a2b: Optional[Dict[str, Any]] = Field(default=None, alias="3d08c772-dcf7-42b2-a1ed-520618ab6a2b")

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of NoOp200Response10 from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of var_7761063e_fa20_469e_ad24_10f3934a11cb
        if self.var_7761063e_fa20_469e_ad24_10f3934a11cb:
            _dict['7761063e-fa20-469e-ad24-10f3934a11cb'] = self.var_7761063e_fa20_469e_ad24_10f3934a11cb.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c6609ff7_89f6_4179_b151_722f9e4ea275
        if self.c6609ff7_89f6_4179_b151_722f9e4ea275:
            _dict['c6609ff7-89f6-4179-b151-722f9e4ea275'] = self.c6609ff7_89f6_4179_b151_722f9e4ea275.to_dict()
        # override the default output from pydantic by calling `to_dict()` of var_5a007200_44ea_4e1f_a598_456ec4ca580d
        if self.var_5a007200_44ea_4e1f_a598_456ec4ca580d:
            _dict['5a007200-44ea-4e1f-a598-456ec4ca580d'] = self.var_5a007200_44ea_4e1f_a598_456ec4ca580d.to_dict()
        # override the default output from pydantic by calling `to_dict()` of c16703c5_43ff_41b2_8117_cbdb740f4669
        if self.c16703c5_43ff_41b2_8117_cbdb740f4669:
            _dict['c16703c5-43ff-41b2-8117-cbdb740f4669'] = self.c16703c5_43ff_41b2_8117_cbdb740f4669.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of NoOp200Response10 from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "7761063e-fa20-469e-ad24-10f3934a11cb": BetaOrganizationServiceAddHumanUserRequest.from_dict(obj["7761063e-fa20-469e-ad24-10f3934a11cb"]) if obj.get("7761063e-fa20-469e-ad24-10f3934a11cb") is not None else None,
            "c6609ff7-89f6-4179-b151-722f9e4ea275": BetaOrganizationServiceHashedPassword.from_dict(obj["c6609ff7-89f6-4179-b151-722f9e4ea275"]) if obj.get("c6609ff7-89f6-4179-b151-722f9e4ea275") is not None else None,
            "5a007200-44ea-4e1f-a598-456ec4ca580d": BetaOrganizationServicePassword.from_dict(obj["5a007200-44ea-4e1f-a598-456ec4ca580d"]) if obj.get("5a007200-44ea-4e1f-a598-456ec4ca580d") is not None else None,
            "64e2cfb6-30a2-45f7-ab29-e435e8c1a540": obj.get("64e2cfb6-30a2-45f7-ab29-e435e8c1a540"),
            "6fc729ff-3ce4-4402-9f55-1964c189c27f": obj.get("6fc729ff-3ce4-4402-9f55-1964c189c27f"),
            "c16703c5-43ff-41b2-8117-cbdb740f4669": BetaOrganizationServiceSendEmailVerificationCode.from_dict(obj["c16703c5-43ff-41b2-8117-cbdb740f4669"]) if obj.get("c16703c5-43ff-41b2-8117-cbdb740f4669") is not None else None,
            "3d08c772-dcf7-42b2-a1ed-520618ab6a2b": obj.get("3d08c772-dcf7-42b2-a1ed-520618ab6a2b")
        })
        return _obj


